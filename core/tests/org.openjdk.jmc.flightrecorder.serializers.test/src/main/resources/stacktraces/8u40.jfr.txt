#
#  Copyright (c) 2018, Oracle and/or its affiliates. All rights reserved.
#
#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
#  The contents of this file are subject to the terms of either the Universal Permissive License 
#  v 1.0 as shown at http://oss.oracle.com/licenses/upl
#   
#  or the following license:
#   
#  Redistribution and use in source and binary forms, with or without modification, are permitted
#  provided that the following conditions are met:
#   
#  1. Redistributions of source code must retain the above copyright notice, this list of conditions
#  and the following disclaimer.
#   
#  2. Redistributions in binary form must reproduce the above copyright notice, this list of
#  conditions and the following disclaimer in the documentation and/or other materials provided with
#  the distribution.
#   
#  3. Neither the name of the copyright holder nor the names of its contributors may be used to
#  endorse or promote products derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
#  FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
#  WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
void sun.misc.Unsafe.park(boolean, long) (165)
    void java.util.concurrent.locks.LockSupport.parkNanos(java.lang.Object, long) (95)
    long java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(long) (95)
    java.util.concurrent.Delayed java.util.concurrent.DelayQueue.take() (95)
    void javax.swing.TimerQueue.run() (95)
    void java.lang.Thread.run() (95)

    void java.util.concurrent.locks.LockSupport.park(java.lang.Object) (70)
    void java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await() (70)
        java.awt.AWTEvent java.awt.EventQueue.getNextEvent() (65)
        void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (65)
        void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (65)
        void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (65)
        void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (65)
        void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (65)
        void java.awt.EventDispatchThread.run() (65)

        java.util.concurrent.Delayed java.util.concurrent.DelayQueue.take() (5)
        void javax.swing.TimerQueue.run() (5)
        void java.lang.Thread.run() (5)



void java.lang.Object.wait(long) (142)
    void sun.java2d.opengl.OGLRenderQueue$QueueFlusher.run() (108)

    int java.io.PipedInputStream.read() (18)
    int java.io.PipedInputStream.read(byte[], int, int) (18)
    int sun.nio.cs.StreamDecoder.readBytes() (18)
    int sun.nio.cs.StreamDecoder.implRead(char[], int, int) (18)
    int sun.nio.cs.StreamDecoder.read(char[], int, int) (18)
    int java.io.InputStreamReader.read(char[], int, int) (18)
    void java.io.BufferedReader.fill() (18)
    java.lang.String java.io.BufferedReader.readLine(boolean) (18)
    java.lang.String java.io.BufferedReader.readLine() (18)
    void sun.tools.jconsole.OutputViewer$PipeListener.run() (18)

    void java.util.TimerThread.mainLoop() (10)
    void java.util.TimerThread.run() (10)

    void java.lang.Object.wait() (2)
        void java.lang.ref.Reference$ReferenceHandler.run() (1)

        void sun.java2d.opengl.OGLRenderQueue$QueueFlusher.flushNow() (1)
        void sun.java2d.opengl.OGLRenderQueue.flushNow() (1)
        void sun.java2d.opengl.OGLBlitLoops.IsoBlit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.image.BufferedImage, java.awt.image.BufferedImageOp, java.awt.Composite, sun.java2d.pipe.Region, java.awt.geom.AffineTransform, int, int, int, int, int, double, double, double, double, boolean) (1)
        void sun.java2d.opengl.OGLRTTSurfaceToSurfaceBlit.Blit(sun.java2d.SurfaceData, sun.java2d.SurfaceData, java.awt.Composite, sun.java2d.pipe.Region, int, int, int, int, int, int) (1)
        void sun.java2d.pipe.DrawImage.blitSurfaceData(sun.java2d.SunGraphics2D, sun.java2d.pipe.Region, sun.java2d.SurfaceData, sun.java2d.SurfaceData, sun.java2d.loops.SurfaceType, sun.java2d.loops.SurfaceType, int, int, int, int, int, int, java.awt.Color) (1)
        boolean sun.java2d.pipe.DrawImage.renderImageCopy(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.Color, int, int, int, int, int, int) (1)
        boolean sun.java2d.pipe.DrawImage.tryCopyOrScale(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, java.awt.Color, int, double[]) (1)
        void sun.java2d.pipe.DrawImage.transformImage(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, int, int, int, int, int, java.awt.Color) (1)
        boolean sun.java2d.pipe.DrawImage.scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color) (1)
        boolean sun.java2d.pipe.DrawImage.scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (1)
        boolean sun.java2d.pipe.ValidatePipe.scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (1)
        boolean sun.java2d.SunGraphics2D.drawHiDPIImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (1)
        boolean sun.java2d.SunGraphics2D.drawImage(java.awt.Image, int, int, java.awt.Color, java.awt.image.ImageObserver) (1)
        boolean sun.java2d.SunGraphics2D.drawImage(java.awt.Image, int, int, java.awt.image.ImageObserver) (1)
        void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
        boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
        void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
        void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
        void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
        java.lang.Void javax.swing.RepaintManager$4.run() (1)
        java.lang.Object javax.swing.RepaintManager$4.run() (1)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
        void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
        void javax.swing.RepaintManager.paintDirtyRegions() (1)
        void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
        void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
        void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
        void java.awt.event.InvocationEvent.dispatch() (1)
        void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
        void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
        java.lang.Void java.awt.EventQueue$3.run() (1)
        java.lang.Object java.awt.EventQueue$3.run() (1)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
        void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
        void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
        void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
        void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
        void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
        void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
        void java.awt.EventDispatchThread.run() (1)


    java.lang.ref.Reference java.lang.ref.ReferenceQueue.remove(long) (2)
    java.lang.ref.Reference java.lang.ref.ReferenceQueue.remove() (2)
        void sun.java2d.Disposer.run() (1)
        void java.lang.Thread.run() (1)

        void java.lang.ref.Finalizer$FinalizerThread.run() (1)


    javax.management.remote.NotificationResult com.sun.jmx.remote.internal.ArrayNotificationBuffer.fetchNotifications(com.sun.jmx.remote.internal.NotificationBufferFilter, long, long, int) (1)
    javax.management.remote.NotificationResult com.sun.jmx.remote.internal.ArrayNotificationBuffer$ShareBuffer.fetchNotifications(com.sun.jmx.remote.internal.NotificationBufferFilter, long, long, int) (1)
    javax.management.remote.NotificationResult com.sun.jmx.remote.internal.ServerNotifForwarder.fetchNotifs(long, long, int) (1)
    javax.management.remote.NotificationResult javax.management.remote.rmi.RMIConnectionImpl$3.run() (1)
    java.lang.Object javax.management.remote.rmi.RMIConnectionImpl$3.run() (1)
    javax.management.remote.NotificationResult javax.management.remote.rmi.RMIConnectionImpl.fetchNotifications(long, int, long) (1)
    java.lang.Object sun.reflect.GeneratedMethodAccessor33.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
    void sun.rmi.server.UnicastServerRef.dispatch(java.rmi.Remote, java.rmi.server.RemoteCall) (1)
    java.lang.Void sun.rmi.transport.Transport$1.run() (1)
    java.lang.Object sun.rmi.transport.Transport$1.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext) (1)
    boolean sun.rmi.transport.Transport.serviceCall(java.rmi.server.RemoteCall) (1)
    void sun.rmi.transport.tcp.TCPTransport.handleMessages(sun.rmi.transport.Connection, boolean) (1)
    void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0() (1)
    java.lang.Void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0() (1)
    java.lang.Object sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$24.940244335.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
    void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run() (1)
    void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (1)
    void java.util.concurrent.ThreadPoolExecutor$Worker.run() (1)
    void java.lang.Thread.run() (1)

    void com.sun.jmx.remote.internal.ServerCommunicatorAdmin$Timeout.run() (1)
    void java.lang.Thread.run() (1)


void java.awt.image.DataBufferInt.<init>(int) (18)
java.awt.image.WritableRaster java.awt.image.Raster.createPackedRaster(int, int, int, int[], java.awt.Point) (18)
java.awt.image.WritableRaster java.awt.image.DirectColorModel.createCompatibleWritableRaster(int, int) (18)
void java.awt.image.BufferedImage.<init>(int, int, int) (18)
java.awt.Image com.apple.laf.AquaPainter$AquaSingleImagePainter.createImage(int, int, int, int, java.awt.Rectangle, apple.laf.JRSUIControl, apple.laf.JRSUIState) (18)
java.awt.Image com.apple.laf.AquaPainter$AquaSingleImagePainter.lambda$paintFromSingleCachedImage$0(int, int, java.awt.Rectangle, apple.laf.JRSUIControl, apple.laf.JRSUIState, java.lang.Integer, java.lang.Integer) (18)
java.lang.Object com.apple.laf.AquaPainter$AquaSingleImagePainter$$Lambda$23.2031755243.apply(java.lang.Object, java.lang.Object) (18)
java.awt.Image sun.awt.image.MultiResolutionCachedImage.getResolutionVariant(int, int) (18)
    java.awt.Image sun.java2d.SunGraphics2D.getResolutionVariant(sun.awt.image.MultiResolutionImage, int, int, int, int, int, int, int, int, int, int) (13)
    boolean sun.java2d.SunGraphics2D.drawHiDPIImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (13)
    boolean sun.java2d.SunGraphics2D.drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (13)
    boolean sun.java2d.SunGraphics2D.drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver) (13)
    void com.apple.laf.AquaPainter$AquaSingleImagePainter.paintFromSingleCachedImage(java.awt.Graphics2D, apple.laf.JRSUIControl, apple.laf.JRSUIState, java.awt.Rectangle) (13)
    void com.apple.laf.AquaPainter$AquaSingleImagePainter.paint(java.awt.Graphics2D, apple.laf.JRSUIState) (13)
    void com.apple.laf.AquaPainter.paint(java.awt.Graphics, java.awt.Component, int, int, int, int) (13)
        void com.apple.laf.AquaInternalFrameBorder.drawWindowTitle(java.awt.Graphics, javax.swing.JInternalFrame, int, int, int, int) (4)
        void com.apple.laf.AquaInternalFrameBorder.paintBorder(javax.swing.JInternalFrame, java.awt.Component, java.awt.Graphics, int, int, int, int) (4)
        void com.apple.laf.AquaInternalFrameBorder.paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) (4)
        void javax.swing.JComponent.paintBorder(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JLayeredPane.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (4)
        void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (4)
        boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (4)
        void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (4)
        void javax.swing.JComponent._paintImmediately(int, int, int, int) (4)
        void javax.swing.JComponent.paintImmediately(int, int, int, int) (4)
        java.lang.Void javax.swing.RepaintManager$4.run() (4)
        java.lang.Object javax.swing.RepaintManager$4.run() (4)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (4)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (4)
        void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (4)
        void javax.swing.RepaintManager.paintDirtyRegions() (4)
        void javax.swing.RepaintManager.prePaintDirtyRegions() (4)
        void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (4)
        void javax.swing.RepaintManager$ProcessingRunnable.run() (4)
        void java.awt.event.InvocationEvent.dispatch() (4)
        void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (4)
        void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (4)
        java.lang.Void java.awt.EventQueue$3.run() (4)
        java.lang.Object java.awt.EventQueue$3.run() (4)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (4)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (4)
        void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (4)
        void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (4)
        void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (4)
        void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (4)
        void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (4)
        void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (4)
        void java.awt.EventDispatchThread.run() (4)

        void com.apple.laf.AquaTableHeaderBorder.paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) (4)
        void javax.swing.JComponent.paintBorder(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.CellRendererPane.paintComponent(java.awt.Graphics, java.awt.Component, java.awt.Container, int, int, int, int, boolean) (4)
        void javax.swing.plaf.basic.BasicTableHeaderUI.paintCell(java.awt.Graphics, java.awt.Rectangle, int) (4)
        void javax.swing.plaf.basic.BasicTableHeaderUI.paint(java.awt.Graphics, javax.swing.JComponent) (4)
        void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (4)
        void javax.swing.JComponent.paintComponent(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JViewport.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JLayeredPane.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JLayeredPane.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (4)
        void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (4)
        boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (4)
        void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (4)
        void javax.swing.JComponent._paintImmediately(int, int, int, int) (4)
        void javax.swing.JComponent.paintImmediately(int, int, int, int) (4)
        java.lang.Void javax.swing.RepaintManager$4.run() (4)
        java.lang.Object javax.swing.RepaintManager$4.run() (4)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (4)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (4)
        void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (4)
        void javax.swing.RepaintManager.paintDirtyRegions() (4)
        void javax.swing.RepaintManager.prePaintDirtyRegions() (4)
        void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (4)
        void javax.swing.RepaintManager$ProcessingRunnable.run() (4)
        void java.awt.event.InvocationEvent.dispatch() (4)
        void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (4)

        void com.apple.laf.AquaTextFieldBorder.paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) (3)
        void javax.swing.JComponent.paintBorder(java.awt.Graphics) (3)
        void javax.swing.JComponent.paint(java.awt.Graphics) (3)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (3)
        void javax.swing.JComponent.paint(java.awt.Graphics) (3)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (3)
        void javax.swing.JComponent.paint(java.awt.Graphics) (3)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (3)
        void javax.swing.JComponent.paint(java.awt.Graphics) (3)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (3)
        void javax.swing.JComponent.paint(java.awt.Graphics) (3)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (3)
        void javax.swing.JComponent.paint(java.awt.Graphics) (3)
        void javax.swing.JLayeredPane.paint(java.awt.Graphics) (3)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (3)
        void javax.swing.JComponent.paint(java.awt.Graphics) (3)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (3)
        void javax.swing.JComponent.paint(java.awt.Graphics) (3)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (3)
        void javax.swing.JComponent.paint(java.awt.Graphics) (3)
        void javax.swing.JLayeredPane.paint(java.awt.Graphics) (3)
        void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (3)
        void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (3)
        boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (3)
        void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (3)
        void javax.swing.JComponent._paintImmediately(int, int, int, int) (3)
        void javax.swing.JComponent.paintImmediately(int, int, int, int) (3)
        java.lang.Void javax.swing.RepaintManager$4.run() (3)
        java.lang.Object javax.swing.RepaintManager$4.run() (3)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (3)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (3)
        void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (3)
        void javax.swing.RepaintManager.paintDirtyRegions() (3)
        void javax.swing.RepaintManager.prePaintDirtyRegions() (3)
        void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (3)
        void javax.swing.RepaintManager$ProcessingRunnable.run() (3)
        void java.awt.event.InvocationEvent.dispatch() (3)
        void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (3)
        void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (3)
        java.lang.Void java.awt.EventQueue$3.run() (3)
        java.lang.Object java.awt.EventQueue$3.run() (3)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (3)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (3)
        void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (3)
        void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (3)
        void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (3)
        void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (3)
        void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (3)
        void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (3)

        void com.apple.laf.AquaButtonBorder.doButtonPaint(javax.swing.AbstractButton, javax.swing.ButtonModel, java.awt.Graphics, int, int, int, int) (2)
        void com.apple.laf.AquaButtonLabeledUI$LabeledButtonBorder.doButtonPaint(javax.swing.AbstractButton, javax.swing.ButtonModel, java.awt.Graphics, int, int, int, int) (2)
        void com.apple.laf.AquaButtonBorder.paintButton(java.awt.Component, java.awt.Graphics, int, int, int, int) (2)
        void com.apple.laf.AquaButtonLabeledUI.paint(java.awt.Graphics, javax.swing.JComponent) (2)
        void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (2)
        void javax.swing.JComponent.paintComponent(java.awt.Graphics) (2)
        void javax.swing.JComponent.paint(java.awt.Graphics) (2)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (2)
        void javax.swing.JComponent.paint(java.awt.Graphics) (2)
            void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
            void javax.swing.JComponent.paint(java.awt.Graphics) (1)
            void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
            void javax.swing.JComponent.paint(java.awt.Graphics) (1)
            void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
            void javax.swing.JComponent.paint(java.awt.Graphics) (1)
            void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
            void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
            void javax.swing.JComponent.paint(java.awt.Graphics) (1)
            void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
            void javax.swing.JComponent.paint(java.awt.Graphics) (1)
            void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
            void javax.swing.JComponent.paint(java.awt.Graphics) (1)
            void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
            void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
            void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
            boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
            void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
            void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
            void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
            java.lang.Void javax.swing.RepaintManager$4.run() (1)
            java.lang.Object javax.swing.RepaintManager$4.run() (1)
            java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
            java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
            void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
            void javax.swing.RepaintManager.paintDirtyRegions() (1)
            void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
            void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
            void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
            void java.awt.event.InvocationEvent.dispatch() (1)
            void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
            void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
            java.lang.Void java.awt.EventQueue$3.run() (1)
            java.lang.Object java.awt.EventQueue$3.run() (1)
            java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
            java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
            void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
            void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
            void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
            void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)

            void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
            void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
            boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
            void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
            void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
            void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
            java.lang.Void javax.swing.RepaintManager$4.run() (1)
            java.lang.Object javax.swing.RepaintManager$4.run() (1)
            java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
            java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
            void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
            void javax.swing.RepaintManager.paintDirtyRegions() (1)
            void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
            void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
            void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
            void java.awt.event.InvocationEvent.dispatch() (1)
            void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
            void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
            java.lang.Void java.awt.EventQueue$3.run() (1)
            java.lang.Object java.awt.EventQueue$3.run() (1)
            java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
            java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
            void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
            void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
            void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
            void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
            void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
            void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
            void java.awt.EventDispatchThread.run() (1)



    java.awt.Image sun.awt.image.MultiResolutionCachedImage.getBaseImage() (5)
    int sun.awt.image.AbstractMultiResolutionImage.getWidth(java.awt.image.ImageObserver) (5)
    int sun.awt.image.MultiResolutionCachedImage.getWidth(java.awt.image.ImageObserver) (5)
    boolean sun.java2d.SunGraphics2D.drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (5)
    boolean sun.java2d.SunGraphics2D.drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver) (5)
    void com.apple.laf.AquaPainter$AquaSingleImagePainter.paintFromSingleCachedImage(java.awt.Graphics2D, apple.laf.JRSUIControl, apple.laf.JRSUIState, java.awt.Rectangle) (5)
    void com.apple.laf.AquaPainter$AquaSingleImagePainter.paint(java.awt.Graphics2D, apple.laf.JRSUIState) (5)
    void com.apple.laf.AquaPainter.paint(java.awt.Graphics, java.awt.Component, int, int, int, int) (5)
        void com.apple.laf.AquaInternalFrameBorder.drawWindowTitle(java.awt.Graphics, javax.swing.JInternalFrame, int, int, int, int) (4)
        void com.apple.laf.AquaInternalFrameBorder.paintBorder(javax.swing.JInternalFrame, java.awt.Component, java.awt.Graphics, int, int, int, int) (4)
        void com.apple.laf.AquaInternalFrameBorder.paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) (4)
        void javax.swing.JComponent.paintBorder(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (4)
        void javax.swing.JComponent.paint(java.awt.Graphics) (4)
        void javax.swing.JLayeredPane.paint(java.awt.Graphics) (4)
        void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (4)
        void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (4)
        boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (4)
        void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (4)
        void javax.swing.JComponent._paintImmediately(int, int, int, int) (4)
        void javax.swing.JComponent.paintImmediately(int, int, int, int) (4)
        java.lang.Void javax.swing.RepaintManager$4.run() (4)
        java.lang.Object javax.swing.RepaintManager$4.run() (4)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (4)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (4)
        void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (4)
        void javax.swing.RepaintManager.paintDirtyRegions() (4)
        void javax.swing.RepaintManager.prePaintDirtyRegions() (4)
        void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (4)
        void javax.swing.RepaintManager$ProcessingRunnable.run() (4)
        void java.awt.event.InvocationEvent.dispatch() (4)
        void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (4)
        void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (4)
        java.lang.Void java.awt.EventQueue$3.run() (4)
        java.lang.Object java.awt.EventQueue$3.run() (4)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (4)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (4)
        void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (4)
        void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (4)
        void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (4)
        void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (4)
        void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (4)
        void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (4)
        void java.awt.EventDispatchThread.run() (4)

        void com.apple.laf.AquaTableHeaderBorder.paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) (1)
        void javax.swing.JComponent.paintBorder(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.CellRendererPane.paintComponent(java.awt.Graphics, java.awt.Component, java.awt.Container, int, int, int, int, boolean) (1)
        void javax.swing.plaf.basic.BasicTableHeaderUI.paintCell(java.awt.Graphics, java.awt.Rectangle, int) (1)
        void javax.swing.plaf.basic.BasicTableHeaderUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
        void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
        void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JViewport.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
        void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
        boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
        void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
        void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
        void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
        java.lang.Void javax.swing.RepaintManager$4.run() (1)
        java.lang.Object javax.swing.RepaintManager$4.run() (1)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
        void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
        void javax.swing.RepaintManager.paintDirtyRegions() (1)
        void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
        void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
        void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
        void java.awt.event.InvocationEvent.dispatch() (1)



java.security.AccessControlContext java.security.AccessController.getStackAccessControlContext() (11)
java.security.AccessControlContext java.security.AccessController.getContext() (11)
    void java.awt.AWTEvent.<init>(java.lang.Object, int) (9)
        void java.awt.event.ComponentEvent.<init>(java.awt.Component, int) (7)
            void java.awt.event.InputEvent.<init>(java.awt.Component, int, long, int) (6)
            void java.awt.event.MouseEvent.<init>(java.awt.Component, int, long, int, int, int, int, int, int, boolean, int) (6)
            void sun.lwawt.LWWindowPeer.notifyMouseEvent(int, long, int, int, int, int, int, int, int, boolean, byte[]) (6)
            void sun.lwawt.macosx.CPlatformResponder.handleMouseEvent(int, int, int, int, int, int, int, int) (6)
            void sun.lwawt.macosx.CPlatformView.deliverMouseEvent(sun.lwawt.macosx.NSEvent) (6)

            void java.awt.event.WindowEvent.<init>(java.awt.Window, int, java.awt.Window, int, int) (1)
            void java.awt.event.WindowEvent.<init>(java.awt.Window, int, java.awt.Window) (1)
            void sun.awt.TimedWindowEvent.<init>(java.awt.Window, int, java.awt.Window, long) (1)
            void sun.lwawt.LWWindowPeer.changeFocusedWindow(boolean, java.awt.Window) (1)
            void sun.lwawt.LWWindowPeer.notifyActivation(boolean, sun.lwawt.LWWindowPeer) (1)
            void sun.lwawt.macosx.CPlatformResponder.handleWindowFocusEvent(boolean, sun.lwawt.LWWindowPeer) (1)
            void sun.lwawt.macosx.CPlatformWindow.deliverWindowFocusEvent(boolean, sun.lwawt.macosx.CPlatformWindow) (1)


        void java.awt.event.InvocationEvent.<init>(java.lang.Object, int, java.lang.Runnable, java.lang.Object, java.lang.Runnable, boolean) (2)
        void java.awt.event.InvocationEvent.<init>(java.lang.Object, java.lang.Runnable, java.lang.Object, boolean) (2)
        void sun.awt.PeerEvent.<init>(java.lang.Object, java.lang.Runnable, java.lang.Object, boolean, long) (2)
        void sun.awt.PeerEvent.<init>(java.lang.Object, java.lang.Runnable, long) (2)
        void sun.awt.SunToolkit.executeOnEventHandlerThread(java.lang.Object, java.lang.Runnable) (2)
        void sun.lwawt.LWCursorManager.updateCursorLater(sun.lwawt.LWWindowPeer) (2)
        void sun.lwawt.LWWindowPeer.notifyUpdateCursor() (2)
        void sun.lwawt.LWWindowPeer.notifyMouseEvent(int, long, int, int, int, int, int, int, int, boolean, byte[]) (2)
        void sun.lwawt.macosx.CPlatformResponder.handleMouseEvent(int, int, int, int, int, int, int, int) (2)
        void sun.lwawt.macosx.CPlatformView.deliverMouseEvent(sun.lwawt.macosx.NSEvent) (2)


    void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
    void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
    void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
    void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
    void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
    void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
    void java.awt.EventDispatchThread.run() (1)

    java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
    java.lang.Void java.awt.EventQueue$4.run() (1)
    java.lang.Object java.awt.EventQueue$4.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
    java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
    void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
    void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
    void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
    void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
    void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
    void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
    void java.awt.EventDispatchThread.run() (1)


int java.net.SocketInputStream.read(byte[], int, int, int) (9)
int java.net.SocketInputStream.read(byte[], int, int) (9)
void java.io.BufferedInputStream.fill() (9)
int java.io.BufferedInputStream.read() (9)
int java.io.FilterInputStream.read() (9)
void sun.rmi.transport.tcp.TCPTransport.handleMessages(sun.rmi.transport.Connection, boolean) (9)
void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0() (9)
java.lang.Void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0() (9)
java.lang.Object sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$24.940244335.run() (9)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (9)
void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run() (9)
void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (9)
void java.util.concurrent.ThreadPoolExecutor$Worker.run() (9)
void java.lang.Thread.run() (9)

java.lang.Object java.lang.Object.clone() (3)
    java.lang.Object sun.java2d.SunGraphics2D.clone() (2)
    java.awt.Graphics sun.java2d.SunGraphics2D.create() (2)
        void javax.swing.text.html.CSSBorder.paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) (1)
        void javax.swing.text.html.StyleSheet$BoxPainter.paint(java.awt.Graphics, float, float, float, float, javax.swing.text.View) (1)
        void javax.swing.text.html.BlockView.paint(java.awt.Graphics, java.awt.Shape) (1)
        void javax.swing.text.BoxView.paintChild(java.awt.Graphics, java.awt.Rectangle, int) (1)
        void javax.swing.text.BoxView.paint(java.awt.Graphics, java.awt.Shape) (1)
        void javax.swing.text.html.BlockView.paint(java.awt.Graphics, java.awt.Shape) (1)
        void javax.swing.plaf.basic.BasicHTML$Renderer.paint(java.awt.Graphics, java.awt.Shape) (1)
        void javax.swing.plaf.basic.BasicLabelUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
        void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
        void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
        void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
        boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
        void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
        void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
        void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
        java.lang.Void javax.swing.RepaintManager$4.run() (1)
        java.lang.Object javax.swing.RepaintManager$4.run() (1)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
        void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
        void javax.swing.RepaintManager.paintDirtyRegions() (1)
        void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
        void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
        void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
        void java.awt.event.InvocationEvent.dispatch() (1)
        void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
        void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
        java.lang.Void java.awt.EventQueue$3.run() (1)
        java.lang.Object java.awt.EventQueue$3.run() (1)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
        void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
        void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
        void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
        void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
        void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
        void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
        void java.awt.EventDispatchThread.run() (1)

        void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
        void javax.swing.JComponent.paint(java.awt.Graphics) (1)
        void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
        void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
        void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
        boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
        void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
        void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
        void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
        java.lang.Void javax.swing.RepaintManager$4.run() (1)
        java.lang.Object javax.swing.RepaintManager$4.run() (1)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
        void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
        void javax.swing.RepaintManager.paintDirtyRegions() (1)
        void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
        void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
        void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
        void java.awt.event.InvocationEvent.dispatch() (1)
        void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
        void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
        java.lang.Void java.awt.EventQueue$3.run() (1)
        java.lang.Object java.awt.EventQueue$3.run() (1)
        java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
        java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
        void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
        void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
        void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
        void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
        void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
        void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
        void java.awt.EventDispatchThread.run() (1)


    java.lang.Class[] java.lang.Class.getInterfaces() (1)
    boolean sun.awt.SunToolkit.isInstanceOf(java.lang.Class, java.lang.String) (1)
    boolean sun.awt.SunToolkit.isInstanceOf(java.lang.Object, java.lang.String) (1)
    void javax.swing.LookAndFeel.installProperty(javax.swing.JComponent, java.lang.String, java.lang.Object) (1)
    void javax.swing.plaf.basic.BasicLabelUI.installDefaults(javax.swing.JLabel) (1)
    void javax.swing.plaf.basic.BasicLabelUI.installUI(javax.swing.JComponent) (1)
    void javax.swing.JComponent.setUI(javax.swing.plaf.ComponentUI) (1)
    void javax.swing.JLabel.setUI(javax.swing.plaf.LabelUI) (1)
    void javax.swing.JLabel.updateUI() (1)
    void javax.swing.table.DefaultTableCellRenderer.updateUI() (1)
    void javax.swing.JLabel.<init>(java.lang.String, javax.swing.Icon, int) (1)
    void javax.swing.JLabel.<init>() (1)
    void javax.swing.table.DefaultTableCellRenderer.<init>() (1)
    void sun.tools.jconsole.ConnectDialog$LocalTabJTable$2.<init>(sun.tools.jconsole.ConnectDialog$LocalTabJTable) (1)
    javax.swing.table.TableCellRenderer sun.tools.jconsole.ConnectDialog$LocalTabJTable.getCellRenderer(int, int) (1)
    void javax.swing.plaf.basic.BasicTableUI.paintCell(java.awt.Graphics, java.awt.Rectangle, int, int) (1)
    void javax.swing.plaf.basic.BasicTableUI.paintCells(java.awt.Graphics, int, int, int, int) (1)
    void javax.swing.plaf.basic.BasicTableUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
    void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
    void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JViewport.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
    void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
    boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
    void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
    void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
    void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
    java.lang.Void javax.swing.RepaintManager$4.run() (1)
    java.lang.Object javax.swing.RepaintManager$4.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
    java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
    void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
    void javax.swing.RepaintManager.paintDirtyRegions() (1)
    void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
    void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
    void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
    void java.awt.event.InvocationEvent.dispatch() (1)
    void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
    void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
    java.lang.Void java.awt.EventQueue$3.run() (1)


java.io.ObjectStreamClass java.io.ObjectStreamClass.lookup(java.lang.Class, boolean) (3)
void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (3)
    void java.io.ObjectOutputStream.writeObject(java.lang.Object) (2)
    void java.util.TreeMap.writeObject(java.io.ObjectOutputStream) (2)
    java.lang.Object sun.reflect.GeneratedMethodAccessor6.invoke(java.lang.Object, java.lang.Object[]) (2)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (2)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (2)
    void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (2)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (2)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (2)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (2)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (2)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (2)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (2)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (2)
    void java.io.ObjectOutputStream.writeObject(java.lang.Object) (2)
    void java.util.TreeMap.writeObject(java.io.ObjectOutputStream) (2)
    java.lang.Object sun.reflect.GeneratedMethodAccessor6.invoke(java.lang.Object, java.lang.Object[]) (2)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (2)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (2)
    void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (2)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (2)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (2)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (2)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (2)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (2)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (2)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (2)
    void java.io.ObjectOutputStream.writeObject(java.lang.Object) (2)
    void java.util.LinkedHashMap.internalWriteEntries(java.io.ObjectOutputStream) (2)
    void java.util.HashMap.writeObject(java.io.ObjectOutputStream) (2)
    java.lang.Object sun.reflect.GeneratedMethodAccessor17.invoke(java.lang.Object, java.lang.Object[]) (2)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (2)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (2)
    void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (2)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (2)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (2)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (2)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (2)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (2)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (2)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (2)
    void java.io.ObjectOutputStream.writeObject(java.lang.Object) (2)
    void java.util.TreeMap.writeObject(java.io.ObjectOutputStream) (2)
    java.lang.Object sun.reflect.GeneratedMethodAccessor6.invoke(java.lang.Object, java.lang.Object[]) (2)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (2)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (2)
    void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (2)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (2)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (2)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (2)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (2)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (2)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (2)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (2)
    void java.io.ObjectOutputStream.writeObject(java.lang.Object) (2)
    void java.util.TreeMap.writeObject(java.io.ObjectOutputStream) (2)
    java.lang.Object sun.reflect.GeneratedMethodAccessor6.invoke(java.lang.Object, java.lang.Object[]) (2)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (2)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (2)
    void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (2)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (2)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (2)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (2)

    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.writeObject(java.lang.Object) (1)
    void java.util.LinkedHashMap.internalWriteEntries(java.io.ObjectOutputStream) (1)
    void java.util.HashMap.writeObject(java.io.ObjectOutputStream) (1)
    java.lang.Object sun.reflect.GeneratedMethodAccessor17.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
    void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.writeObject(java.lang.Object) (1)
    void java.util.TreeMap.writeObject(java.io.ObjectOutputStream) (1)
    java.lang.Object sun.reflect.GeneratedMethodAccessor6.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
    void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.writeObject(java.lang.Object) (1)
    void java.util.TreeMap.writeObject(java.io.ObjectOutputStream) (1)
    java.lang.Object sun.reflect.GeneratedMethodAccessor6.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
    void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.defaultWriteObject() (1)
    void javax.management.Notification.writeObject(java.io.ObjectOutputStream) (1)
    java.lang.Object sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
    void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.writeArray(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)


void java.io.ObjectOutputStream$HandleTable.growEntries() (2)
int java.io.ObjectOutputStream$HandleTable.assign(java.lang.Object) (2)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.writeObject(java.lang.Object) (1)
    void java.util.TreeMap.writeObject(java.io.ObjectOutputStream) (1)
    java.lang.Object sun.reflect.GeneratedMethodAccessor6.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
    void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.writeObject(java.lang.Object) (1)
    void java.util.LinkedHashMap.internalWriteEntries(java.io.ObjectOutputStream) (1)
    void java.util.HashMap.writeObject(java.io.ObjectOutputStream) (1)
    java.lang.Object sun.reflect.GeneratedMethodAccessor17.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
    void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.writeObject(java.lang.Object) (1)
    void java.util.TreeMap.writeObject(java.io.ObjectOutputStream) (1)
    java.lang.Object sun.reflect.GeneratedMethodAccessor6.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
    void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.writeObject(java.lang.Object) (1)
    void java.util.TreeMap.writeObject(java.io.ObjectOutputStream) (1)
    java.lang.Object sun.reflect.GeneratedMethodAccessor6.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
    void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.defaultWriteObject() (1)
    void javax.management.Notification.writeObject(java.io.ObjectOutputStream) (1)
    java.lang.Object sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)

    void java.io.ObjectOutputStream.writeString(java.lang.String, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
    void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
    void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
    void java.io.ObjectOutputStream.writeObject(java.lang.Object) (1)
    void sun.rmi.server.UnicastRef.marshalValue(java.lang.Class, java.lang.Object, java.io.ObjectOutput) (1)
    void sun.rmi.server.UnicastServerRef.dispatch(java.rmi.Remote, java.rmi.server.RemoteCall) (1)
    java.lang.Void sun.rmi.transport.Transport$1.run() (1)
    java.lang.Object sun.rmi.transport.Transport$1.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext) (1)
    boolean sun.rmi.transport.Transport.serviceCall(java.rmi.server.RemoteCall) (1)
    void sun.rmi.transport.tcp.TCPTransport.handleMessages(sun.rmi.transport.Connection, boolean) (1)
    void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0() (1)
    java.lang.Void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0() (1)
    java.lang.Object sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$24.940244335.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
    void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run() (1)
    void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (1)
    void java.util.concurrent.ThreadPoolExecutor$Worker.run() (1)
    void java.lang.Thread.run() (1)


void com.sun.jmx.remote.internal.ServerNotifForwarder$NotifForwarderBufferFilter.apply(java.util.List, javax.management.ObjectName, javax.management.Notification) (2)
javax.management.remote.NotificationResult com.sun.jmx.remote.internal.ArrayNotificationBuffer.fetchNotifications(com.sun.jmx.remote.internal.NotificationBufferFilter, long, long, int) (2)
javax.management.remote.NotificationResult com.sun.jmx.remote.internal.ArrayNotificationBuffer$ShareBuffer.fetchNotifications(com.sun.jmx.remote.internal.NotificationBufferFilter, long, long, int) (2)
javax.management.remote.NotificationResult com.sun.jmx.remote.internal.ServerNotifForwarder.fetchNotifs(long, long, int) (2)
javax.management.remote.NotificationResult javax.management.remote.rmi.RMIConnectionImpl$3.run() (2)
java.lang.Object javax.management.remote.rmi.RMIConnectionImpl$3.run() (2)
javax.management.remote.NotificationResult javax.management.remote.rmi.RMIConnectionImpl.fetchNotifications(long, int, long) (2)
    java.lang.Object sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
    void sun.rmi.server.UnicastServerRef.dispatch(java.rmi.Remote, java.rmi.server.RemoteCall) (1)
    java.lang.Void sun.rmi.transport.Transport$1.run() (1)
    java.lang.Object sun.rmi.transport.Transport$1.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext) (1)
    boolean sun.rmi.transport.Transport.serviceCall(java.rmi.server.RemoteCall) (1)
    void sun.rmi.transport.tcp.TCPTransport.handleMessages(sun.rmi.transport.Connection, boolean) (1)
    void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0() (1)
    java.lang.Void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0() (1)
    java.lang.Object sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$24.940244335.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
    void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run() (1)
    void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (1)
    void java.util.concurrent.ThreadPoolExecutor$Worker.run() (1)
    void java.lang.Thread.run() (1)

    java.lang.Object sun.reflect.GeneratedMethodAccessor33.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
    java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
    void sun.rmi.server.UnicastServerRef.dispatch(java.rmi.Remote, java.rmi.server.RemoteCall) (1)
    java.lang.Void sun.rmi.transport.Transport$1.run() (1)
    java.lang.Object sun.rmi.transport.Transport$1.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext) (1)
    boolean sun.rmi.transport.Transport.serviceCall(java.rmi.server.RemoteCall) (1)
    void sun.rmi.transport.tcp.TCPTransport.handleMessages(sun.rmi.transport.Connection, boolean) (1)
    void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0() (1)
    java.lang.Void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0() (1)
    java.lang.Object sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$24.940244335.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
    void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run() (1)
    void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (1)
    void java.util.concurrent.ThreadPoolExecutor$Worker.run() (1)
    void java.lang.Thread.run() (1)


void java.lang.AbstractStringBuilder.<init>(int) (2)
void java.lang.StringBuilder.<init>() (2)
java.lang.String java.net.InetAddress.toString() (2)
int java.net.SocketInputStream.read(byte[], int, int, int) (2)
int java.net.SocketInputStream.read(byte[], int, int) (2)
void java.io.BufferedInputStream.fill() (2)
int java.io.BufferedInputStream.read() (2)
int java.io.FilterInputStream.read() (2)
void sun.rmi.transport.tcp.TCPTransport.handleMessages(sun.rmi.transport.Connection, boolean) (2)
void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0() (2)
java.lang.Void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0() (2)
java.lang.Object sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$24.940244335.run() (2)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (2)
void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run() (2)
void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (2)
void java.util.concurrent.ThreadPoolExecutor$Worker.run() (2)
void java.lang.Thread.run() (2)

java.awt.Shape sun.java2d.SunGraphics2D.transformShape(java.awt.geom.AffineTransform, java.awt.Shape) (2)
    java.awt.Shape sun.java2d.SunGraphics2D.transformShape(java.awt.Shape) (1)
    void sun.java2d.SunGraphics2D.clip(java.awt.Shape) (1)
    void sun.java2d.SunGraphics2D.clipRect(int, int, int, int) (1)
    java.awt.Graphics java.awt.Graphics.create(int, int, int, int) (1)
    void javax.swing.CellRendererPane.paintComponent(java.awt.Graphics, java.awt.Component, java.awt.Container, int, int, int, int, boolean) (1)
    void javax.swing.plaf.basic.BasicTableUI.paintCell(java.awt.Graphics, java.awt.Rectangle, int, int) (1)
    void javax.swing.plaf.basic.BasicTableUI.paintCells(java.awt.Graphics, int, int, int, int) (1)
    void javax.swing.plaf.basic.BasicTableUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
    void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
    void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JViewport.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
    void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
    boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
    void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
    void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
    void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
    java.lang.Void javax.swing.RepaintManager$4.run() (1)
    java.lang.Object javax.swing.RepaintManager$4.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
    java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
    void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
    void javax.swing.RepaintManager.paintDirtyRegions() (1)
    void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
    void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
    void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
    void java.awt.event.InvocationEvent.dispatch() (1)
    void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
    void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
    java.lang.Void java.awt.EventQueue$3.run() (1)
    java.lang.Object java.awt.EventQueue$3.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
    java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
    void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
    void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
    void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
    void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
    void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
    void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
    void java.awt.EventDispatchThread.run() (1)

    java.awt.Shape sun.java2d.SunGraphics2D.untransformShape(java.awt.Shape) (1)
    java.awt.Shape sun.java2d.SunGraphics2D.getClip() (1)
    java.awt.Rectangle sun.java2d.SunGraphics2D.getClipBounds(java.awt.Rectangle) (1)
    java.awt.Rectangle sun.java2d.SunGraphics2D.getClipBounds() (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
    void javax.swing.JComponent.paint(java.awt.Graphics) (1)
    void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
    void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
    void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
    boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
    void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
    void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
    void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
    java.lang.Void javax.swing.RepaintManager$4.run() (1)
    java.lang.Object javax.swing.RepaintManager$4.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
    java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
    void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
    void javax.swing.RepaintManager.paintDirtyRegions() (1)
    void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
    void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
    void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
    void java.awt.event.InvocationEvent.dispatch() (1)
    void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
    void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
    java.lang.Void java.awt.EventQueue$3.run() (1)
    java.lang.Object java.awt.EventQueue$3.run() (1)
    java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
    java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
    void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
    void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
    void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
    void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
    void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
    void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
    void java.awt.EventDispatchThread.run() (1)


java.lang.Object javax.swing.text.GapContent.allocateArray(int) (1)
void javax.swing.text.GapVector.<init>(int) (1)
void javax.swing.text.GapContent.<init>(int) (1)
void javax.swing.text.html.HTMLDocument.<init>(javax.swing.text.html.StyleSheet) (1)
void javax.swing.plaf.basic.BasicHTML$BasicDocument.<init>(javax.swing.text.html.StyleSheet, java.awt.Font, java.awt.Color) (1)
javax.swing.text.Document javax.swing.plaf.basic.BasicHTML$BasicEditorKit.createDefaultDocument(java.awt.Font, java.awt.Color) (1)
javax.swing.text.View javax.swing.plaf.basic.BasicHTML.createHTMLView(javax.swing.JComponent, java.lang.String) (1)
void javax.swing.plaf.basic.BasicHTML.updateRenderer(javax.swing.JComponent, java.lang.String) (1)
void javax.swing.plaf.basic.BasicLabelUI.propertyChange(java.beans.PropertyChangeEvent) (1)
void java.beans.PropertyChangeSupport.fire(java.beans.PropertyChangeListener[], java.beans.PropertyChangeEvent) (1)
void java.beans.PropertyChangeSupport.firePropertyChange(java.beans.PropertyChangeEvent) (1)
void java.beans.PropertyChangeSupport.firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object) (1)
void java.awt.Component.firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object) (1)
void javax.swing.JLabel.setText(java.lang.String) (1)
void sun.tools.jconsole.ConnectDialog.valueChanged(javax.swing.event.ListSelectionEvent) (1)
void javax.swing.DefaultListSelectionModel.fireValueChanged(int, int, boolean) (1)
void javax.swing.DefaultListSelectionModel.fireValueChanged(int, int) (1)
void javax.swing.DefaultListSelectionModel.fireValueChanged() (1)
void javax.swing.DefaultListSelectionModel.changeSelection(int, int, int, int, boolean) (1)
void javax.swing.DefaultListSelectionModel.changeSelection(int, int, int, int) (1)
void javax.swing.DefaultListSelectionModel.removeSelectionIntervalImpl(int, int, boolean) (1)
void javax.swing.DefaultListSelectionModel.clearSelection() (1)
void sun.tools.jconsole.ConnectDialog.itemStateChanged(java.awt.event.ItemEvent) (1)
void javax.swing.AbstractButton.fireItemStateChanged(java.awt.event.ItemEvent) (1)
void javax.swing.AbstractButton$Handler.itemStateChanged(java.awt.event.ItemEvent) (1)
void javax.swing.DefaultButtonModel.fireItemStateChanged(java.awt.event.ItemEvent) (1)
void javax.swing.JToggleButton$ToggleButtonModel.setSelected(boolean) (1)
void javax.swing.ButtonGroup.setSelected(javax.swing.ButtonModel, boolean) (1)
void javax.swing.JToggleButton$ToggleButtonModel.setSelected(boolean) (1)
void javax.swing.JToggleButton$ToggleButtonModel.setPressed(boolean) (1)
void javax.swing.plaf.basic.BasicButtonListener.mouseReleased(java.awt.event.MouseEvent) (1)
void java.awt.Component.processMouseEvent(java.awt.event.MouseEvent) (1)
void javax.swing.JComponent.processMouseEvent(java.awt.event.MouseEvent) (1)
void java.awt.Component.processEvent(java.awt.AWTEvent) (1)
void java.awt.Container.processEvent(java.awt.AWTEvent) (1)
void java.awt.Component.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Container.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Component.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.LightweightDispatcher.retargetMouseEvent(java.awt.Component, int, java.awt.event.MouseEvent) (1)
boolean java.awt.LightweightDispatcher.processMouseEvent(java.awt.event.MouseEvent) (1)
boolean java.awt.LightweightDispatcher.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.Container.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Window.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Component.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Void java.awt.EventQueue$4.run() (1)
java.lang.Object java.awt.EventQueue$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

void javax.swing.text.FlowView$FlowStrategy.layout(javax.swing.text.FlowView) (1)
void javax.swing.text.FlowView.layout(int, int) (1)
void javax.swing.text.BoxView.setSize(float, float) (1)
void javax.swing.text.BoxView.updateChildSizes() (1)
void javax.swing.text.BoxView.setSpanOnAxis(int, float) (1)
void javax.swing.text.BoxView.layout(int, int) (1)
void javax.swing.text.BoxView.setSize(float, float) (1)
void javax.swing.text.BoxView.updateChildSizes() (1)
void javax.swing.text.BoxView.setSpanOnAxis(int, float) (1)
void javax.swing.text.BoxView.layout(int, int) (1)
void javax.swing.text.BoxView.setSize(float, float) (1)
void javax.swing.plaf.basic.BasicHTML$Renderer.setSize(float, float) (1)
void javax.swing.plaf.basic.BasicHTML$Renderer.<init>(javax.swing.JComponent, javax.swing.text.ViewFactory, javax.swing.text.View) (1)
javax.swing.text.View javax.swing.plaf.basic.BasicHTML.createHTMLView(javax.swing.JComponent, java.lang.String) (1)
void javax.swing.plaf.basic.BasicHTML.updateRenderer(javax.swing.JComponent, java.lang.String) (1)
void javax.swing.plaf.basic.BasicLabelUI.propertyChange(java.beans.PropertyChangeEvent) (1)
void java.beans.PropertyChangeSupport.fire(java.beans.PropertyChangeListener[], java.beans.PropertyChangeEvent) (1)
void java.beans.PropertyChangeSupport.firePropertyChange(java.beans.PropertyChangeEvent) (1)
void java.beans.PropertyChangeSupport.firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object) (1)
void java.awt.Component.firePropertyChange(java.lang.String, java.lang.Object, java.lang.Object) (1)
void javax.swing.JLabel.setText(java.lang.String) (1)
void sun.tools.jconsole.ConnectDialog.valueChanged(javax.swing.event.ListSelectionEvent) (1)
void javax.swing.DefaultListSelectionModel.fireValueChanged(int, int, boolean) (1)
void javax.swing.DefaultListSelectionModel.fireValueChanged(int, int) (1)
void javax.swing.DefaultListSelectionModel.fireValueChanged() (1)
void javax.swing.DefaultListSelectionModel.changeSelection(int, int, int, int, boolean) (1)
void javax.swing.DefaultListSelectionModel.changeSelection(int, int, int, int) (1)
void javax.swing.DefaultListSelectionModel.setSelectionInterval(int, int) (1)
void javax.swing.JTable.changeSelectionModel(javax.swing.ListSelectionModel, int, boolean, boolean, boolean, int, boolean) (1)
void javax.swing.JTable.changeSelection(int, int, boolean, boolean) (1)
void javax.swing.plaf.basic.BasicTableUI$Handler.adjustSelection(java.awt.event.MouseEvent) (1)
void javax.swing.plaf.basic.BasicTableUI$Handler.mousePressed(java.awt.event.MouseEvent) (1)
void javax.swing.plaf.basic.BasicTableUI$MouseInputHandler.mousePressed(java.awt.event.MouseEvent) (1)
void java.awt.AWTEventMulticaster.mousePressed(java.awt.event.MouseEvent) (1)
void java.awt.AWTEventMulticaster.mousePressed(java.awt.event.MouseEvent) (1)
void java.awt.Component.processMouseEvent(java.awt.event.MouseEvent) (1)
void javax.swing.JComponent.processMouseEvent(java.awt.event.MouseEvent) (1)
void java.awt.Component.processEvent(java.awt.AWTEvent) (1)
void java.awt.Container.processEvent(java.awt.AWTEvent) (1)
void java.awt.Component.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Container.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Component.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.LightweightDispatcher.retargetMouseEvent(java.awt.Component, int, java.awt.event.MouseEvent) (1)
boolean java.awt.LightweightDispatcher.processMouseEvent(java.awt.event.MouseEvent) (1)
boolean java.awt.LightweightDispatcher.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.Container.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Window.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Component.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Void java.awt.EventQueue$4.run() (1)
java.lang.Object java.awt.EventQueue$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)

void java.awt.LightweightDispatcher.retargetMouseEvent(java.awt.Component, int, java.awt.event.MouseEvent) (1)
java.awt.Component java.awt.LightweightDispatcher.retargetMouseEnterExit(java.awt.Component, java.awt.event.MouseEvent, java.awt.Component, boolean) (1)
void java.awt.LightweightDispatcher.trackMouseEnterExit(java.awt.Component, java.awt.event.MouseEvent) (1)
boolean java.awt.LightweightDispatcher.processMouseEvent(java.awt.event.MouseEvent) (1)
boolean java.awt.LightweightDispatcher.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.Container.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Window.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Component.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Void java.awt.EventQueue$4.run() (1)
java.lang.Object java.awt.EventQueue$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

java.lang.Object java.util.TreeMap.put(java.lang.Object, java.lang.Object) (1)
java.util.SortedMap javax.management.openmbean.CompositeDataSupport.makeMap(java.lang.String[], java.lang.Object[]) (1)
void javax.management.openmbean.CompositeDataSupport.<init>(javax.management.openmbean.CompositeType, java.lang.String[], java.lang.Object[]) (1)
java.util.List oracle.jrockit.jfr.FlightRecorder.getRecordings() (1)
java.lang.Object sun.reflect.GeneratedMethodAccessor25.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object sun.reflect.misc.Trampoline.invoke(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) (1)
java.lang.Object sun.reflect.GeneratedMethodAccessor1.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object sun.reflect.misc.MethodUtil.invoke(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) (1)
java.lang.Object com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(java.lang.reflect.Method, java.lang.Object, java.lang.Object[], java.lang.Object) (1)
java.lang.Object com.sun.jmx.mbeanserver.StandardMBeanIntrospector.invokeM2(java.lang.Object, java.lang.Object, java.lang.Object[], java.lang.Object) (1)
java.lang.Object com.sun.jmx.mbeanserver.MBeanIntrospector.invokeM(java.lang.Object, java.lang.Object, java.lang.Object[], java.lang.Object) (1)
java.lang.Object com.sun.jmx.mbeanserver.PerInterface.getAttribute(java.lang.Object, java.lang.String, java.lang.Object) (1)
java.lang.Object com.sun.jmx.mbeanserver.MBeanSupport.getAttribute(java.lang.String) (1)
java.lang.Object javax.management.StandardMBean.getAttribute(java.lang.String) (1)
java.lang.Object com.sun.jmx.interceptor.DefaultMBeanServerInterceptor.getAttribute(javax.management.ObjectName, java.lang.String) (1)
java.lang.Object com.sun.jmx.mbeanserver.JmxMBeanServer.getAttribute(javax.management.ObjectName, java.lang.String) (1)
java.lang.Object javax.management.remote.rmi.RMIConnectionImpl.doOperation(int, java.lang.Object[]) (1)
java.lang.Object javax.management.remote.rmi.RMIConnectionImpl.access$300(javax.management.remote.rmi.RMIConnectionImpl, int, java.lang.Object[]) (1)
java.lang.Object javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation.run() (1)
java.lang.Object javax.management.remote.rmi.RMIConnectionImpl.doPrivilegedOperation(int, java.lang.Object[], javax.security.auth.Subject) (1)
java.lang.Object javax.management.remote.rmi.RMIConnectionImpl.getAttribute(javax.management.ObjectName, java.lang.String, javax.security.auth.Subject) (1)
java.lang.Object sun.reflect.GeneratedMethodAccessor14.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
void sun.rmi.server.UnicastServerRef.dispatch(java.rmi.Remote, java.rmi.server.RemoteCall) (1)
java.lang.Void sun.rmi.transport.Transport$1.run() (1)
java.lang.Object sun.rmi.transport.Transport$1.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext) (1)
boolean sun.rmi.transport.Transport.serviceCall(java.rmi.server.RemoteCall) (1)
void sun.rmi.transport.tcp.TCPTransport.handleMessages(sun.rmi.transport.Connection, boolean) (1)
void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0() (1)
java.lang.Void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0() (1)
java.lang.Object sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$24.940244335.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run() (1)
void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (1)
void java.util.concurrent.ThreadPoolExecutor$Worker.run() (1)
void java.lang.Thread.run() (1)

void javax.swing.Timer.post() (1)
void javax.swing.TimerQueue.run() (1)
void java.lang.Thread.run() (1)

java.lang.Object sun.lwawt.LWComponentPeer.getPeerTreeLock() (1)
sun.lwawt.LWComponentPeer sun.lwawt.LWContainerPeer.findPeerAt(int, int) (1)
void sun.lwawt.LWWindowPeer.notifyMouseEvent(int, long, int, int, int, int, int, int, int, boolean, byte[]) (1)
void sun.lwawt.macosx.CPlatformResponder.handleMouseEvent(int, int, int, int, int, int, int, int) (1)
void sun.lwawt.macosx.CPlatformView.deliverMouseEvent(sun.lwawt.macosx.NSEvent) (1)

sun.java2d.loops.FontInfo sun.java2d.SunGraphics2D.checkFontInfo(sun.java2d.loops.FontInfo, java.awt.Font, java.awt.font.FontRenderContext) (1)
sun.java2d.loops.FontInfo sun.java2d.SunGraphics2D.getFontInfo() (1)
void sun.java2d.pipe.GlyphListPipe.drawString(sun.java2d.SunGraphics2D, java.lang.String, double, double) (1)
void sun.java2d.pipe.ValidatePipe.drawString(sun.java2d.SunGraphics2D, java.lang.String, double, double) (1)
void sun.java2d.SunGraphics2D.drawString(java.lang.String, int, int) (1)
void sun.swing.SwingUtilities2.drawString(javax.swing.JComponent, java.awt.Graphics, java.lang.String, int, int) (1)
void sun.swing.SwingUtilities2.drawStringUnderlineCharAt(javax.swing.JComponent, java.awt.Graphics, java.lang.String, int, int, int) (1)
void com.apple.laf.AquaLabelUI.paintEnabledText(javax.swing.JLabel, java.awt.Graphics, java.lang.String, int, int) (1)
void javax.swing.plaf.basic.BasicLabelUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.CellRendererPane.paintComponent(java.awt.Graphics, java.awt.Component, java.awt.Container, int, int, int, int, boolean) (1)
void javax.swing.plaf.basic.BasicTableUI.paintCell(java.awt.Graphics, java.awt.Rectangle, int, int) (1)
void javax.swing.plaf.basic.BasicTableUI.paintCells(java.awt.Graphics, int, int, int, int) (1)
void javax.swing.plaf.basic.BasicTableUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JViewport.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
java.lang.Void javax.swing.RepaintManager$4.run() (1)
java.lang.Object javax.swing.RepaintManager$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
void javax.swing.RepaintManager.paintDirtyRegions() (1)
void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
void java.awt.event.InvocationEvent.dispatch() (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)

void sun.java2d.pipe.DrawImage.transformImage(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, int, int, int, int, int, java.awt.Color) (1)
boolean sun.java2d.pipe.DrawImage.scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color) (1)
boolean sun.java2d.pipe.DrawImage.scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (1)
boolean sun.java2d.SunGraphics2D.drawHiDPIImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (1)
boolean sun.java2d.SunGraphics2D.drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (1)
boolean sun.java2d.SunGraphics2D.drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver) (1)
void com.apple.laf.AquaPainter$AquaSingleImagePainter.paintFromSingleCachedImage(java.awt.Graphics2D, apple.laf.JRSUIControl, apple.laf.JRSUIState, java.awt.Rectangle) (1)
void com.apple.laf.AquaPainter$AquaSingleImagePainter.paint(java.awt.Graphics2D, apple.laf.JRSUIState) (1)
void com.apple.laf.AquaPainter.paint(java.awt.Graphics, java.awt.Component, int, int, int, int) (1)
void com.apple.laf.AquaTableHeaderBorder.paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent.paintBorder(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.CellRendererPane.paintComponent(java.awt.Graphics, java.awt.Component, java.awt.Container, int, int, int, int, boolean) (1)
void javax.swing.plaf.basic.BasicTableHeaderUI.paintCell(java.awt.Graphics, java.awt.Rectangle, int) (1)
void javax.swing.plaf.basic.BasicTableHeaderUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JViewport.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
java.lang.Void javax.swing.RepaintManager$4.run() (1)
java.lang.Object javax.swing.RepaintManager$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
void javax.swing.RepaintManager.paintDirtyRegions() (1)
void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
void java.awt.event.InvocationEvent.dispatch() (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)

void sun.lwawt.LWContainerPeer.setForeground(java.awt.Color) (1)
void sun.lwawt.LWWindowPeer.setForeground(java.awt.Color) (1)
void sun.lwawt.LWComponentPeer.initializeImpl() (1)
void sun.lwawt.LWWindowPeer.initializeImpl() (1)
void sun.lwawt.LWComponentPeer.initialize() (1)
sun.lwawt.LWWindowPeer sun.lwawt.LWToolkit.createDelegatedPeer(java.awt.Window, sun.lwawt.PlatformComponent, sun.lwawt.PlatformWindow, sun.lwawt.LWWindowPeer$PeerType) (1)
java.awt.peer.WindowPeer sun.lwawt.LWToolkit.createWindow(java.awt.Window) (1)
void java.awt.Window.addNotify() (1)
void java.awt.Window.pack() (1)
void javax.swing.Popup$HeavyWeightWindow.show() (1)
void javax.swing.Popup.show() (1)
void javax.swing.JPopupMenu.showPopup() (1)
void javax.swing.JPopupMenu.setVisible(boolean) (1)
void javax.swing.JPopupMenu.show(java.awt.Component, int, int) (1)
void javax.swing.JMenu.setPopupMenuVisible(boolean) (1)
void javax.swing.JPopupMenu.menuSelectionChanged(boolean) (1)
void javax.swing.MenuSelectionManager.setSelectedPath(javax.swing.MenuElement[]) (1)
void javax.swing.plaf.basic.BasicMenuUI.appendPath(javax.swing.MenuElement[], javax.swing.MenuElement) (1)
void javax.swing.plaf.basic.BasicMenuUI.access$200(javax.swing.MenuElement[], javax.swing.MenuElement) (1)
void javax.swing.plaf.basic.BasicMenuUI$Handler.mousePressed(java.awt.event.MouseEvent) (1)
void javax.swing.plaf.basic.BasicMenuUI$MouseInputHandler.mousePressed(java.awt.event.MouseEvent) (1)
void java.awt.Component.processMouseEvent(java.awt.event.MouseEvent) (1)
void javax.swing.JComponent.processMouseEvent(java.awt.event.MouseEvent) (1)
void java.awt.Component.processEvent(java.awt.AWTEvent) (1)
void java.awt.Container.processEvent(java.awt.AWTEvent) (1)
void java.awt.Component.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Container.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Component.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.LightweightDispatcher.retargetMouseEvent(java.awt.Component, int, java.awt.event.MouseEvent) (1)
boolean java.awt.LightweightDispatcher.processMouseEvent(java.awt.event.MouseEvent) (1)
boolean java.awt.LightweightDispatcher.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.Container.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Window.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Component.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Void java.awt.EventQueue$4.run() (1)
java.lang.Object java.awt.EventQueue$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

sun.java2d.pipe.Region sun.java2d.pipe.Region.getIntersectionXYWH(int, int, int, int) (1)
sun.java2d.pipe.Region sun.java2d.pipe.Region.getIntersection(java.awt.Rectangle) (1)
void sun.java2d.SunGraphics2D.validateCompClip() (1)
void sun.java2d.SunGraphics2D.clip(java.awt.Shape) (1)
void sun.java2d.SunGraphics2D.clipRect(int, int, int, int) (1)
java.awt.Graphics java.awt.Graphics.create(int, int, int, int) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
java.lang.Void javax.swing.RepaintManager$4.run() (1)
java.lang.Object javax.swing.RepaintManager$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
void javax.swing.RepaintManager.paintDirtyRegions() (1)
void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
void java.awt.event.InvocationEvent.dispatch() (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

java.lang.ref.Reference java.lang.ref.Reference.access$200() (1)
void java.lang.ref.Reference$ReferenceHandler.run() (1)

java.lang.Object[] java.util.AbstractCollection.toArray() (1)
void java.util.ArrayList.<init>(java.util.Collection) (1)
java.util.Collection oracle.jrockit.jfr.JFRImpl.getRecordings() (1)
void oracle.jrockit.jfr.MetaProducer.onNewChunk() (1)
void oracle.jrockit.jfr.JFRImpl.onNewChunk() (1)

boolean sun.java2d.pipe.PixelToParallelogramConverter.drawGeneralLine(sun.java2d.SunGraphics2D, double, double, double, double) (1)
void sun.java2d.pipe.PixelToParallelogramConverter.drawLine(sun.java2d.SunGraphics2D, int, int, int, int) (1)
void sun.java2d.pipe.ValidatePipe.drawLine(sun.java2d.SunGraphics2D, int, int, int, int) (1)
void sun.java2d.SunGraphics2D.drawLine(int, int, int, int) (1)
void com.apple.laf.AquaPopupMenuSeparatorUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
void com.apple.laf.AquaPopupMenuSeparatorUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void java.awt.GraphicsCallback$PaintCallback.run(java.awt.Component, java.awt.Graphics) (1)
void sun.awt.SunGraphicsCallback.runOneComponent(java.awt.Component, java.awt.Rectangle, java.awt.Graphics, java.awt.Shape, int) (1)
void sun.awt.SunGraphicsCallback.runComponents(java.awt.Component[], java.awt.Graphics, int) (1)
void java.awt.Container.paint(java.awt.Graphics) (1)
void java.awt.Window.paint(java.awt.Graphics) (1)
java.lang.Void javax.swing.RepaintManager$4.run() (1)
java.lang.Object javax.swing.RepaintManager$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
void javax.swing.RepaintManager.paintDirtyRegions() (1)
void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
void java.awt.event.InvocationEvent.dispatch() (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

void sun.rmi.server.UnicastServerRef.dispatch(java.rmi.Remote, java.rmi.server.RemoteCall) (1)
java.lang.Void sun.rmi.transport.Transport$1.run() (1)
java.lang.Object sun.rmi.transport.Transport$1.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext) (1)
boolean sun.rmi.transport.Transport.serviceCall(java.rmi.server.RemoteCall) (1)
void sun.rmi.transport.tcp.TCPTransport.handleMessages(sun.rmi.transport.Connection, boolean) (1)
void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0() (1)
java.lang.Void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0() (1)
java.lang.Object sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$24.940244335.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run() (1)
void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (1)
void java.util.concurrent.ThreadPoolExecutor$Worker.run() (1)
void java.lang.Thread.run() (1)

void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
java.lang.Void javax.swing.RepaintManager$4.run() (1)
java.lang.Object javax.swing.RepaintManager$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
void javax.swing.RepaintManager.paintDirtyRegions() (1)
void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
void java.awt.event.InvocationEvent.dispatch() (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

java.lang.String javax.swing.plaf.basic.BasicLabelUI.layoutCL(javax.swing.JLabel, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) (1)
java.lang.String javax.swing.plaf.basic.BasicLabelUI.layout(javax.swing.JLabel, java.awt.FontMetrics, int, int) (1)
void javax.swing.plaf.basic.BasicLabelUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.CellRendererPane.paintComponent(java.awt.Graphics, java.awt.Component, java.awt.Container, int, int, int, int, boolean) (1)
void javax.swing.plaf.basic.BasicTableUI.paintCell(java.awt.Graphics, java.awt.Rectangle, int, int) (1)
void javax.swing.plaf.basic.BasicTableUI.paintCells(java.awt.Graphics, int, int, int, int) (1)
void javax.swing.plaf.basic.BasicTableUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JViewport.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
java.lang.Void javax.swing.RepaintManager$4.run() (1)
java.lang.Object javax.swing.RepaintManager$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
void javax.swing.RepaintManager.paintDirtyRegions() (1)
void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
void java.awt.event.InvocationEvent.dispatch() (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)

void sun.awt.image.SurfaceManager.setCacheData(java.lang.Object, java.lang.Object) (1)
sun.java2d.SurfaceData sun.java2d.SurfaceData.getSourceSurfaceData(java.awt.Image, int, sun.java2d.loops.CompositeType, java.awt.Color) (1)
boolean sun.java2d.pipe.DrawImage.renderImageCopy(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.Color, int, int, int, int, int, int) (1)
boolean sun.java2d.pipe.DrawImage.tryCopyOrScale(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, java.awt.Color, int, double[]) (1)
void sun.java2d.pipe.DrawImage.transformImage(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, int, int, int, int, int, java.awt.Color) (1)
boolean sun.java2d.pipe.DrawImage.scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color) (1)
boolean sun.java2d.pipe.DrawImage.scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (1)
boolean sun.java2d.SunGraphics2D.drawHiDPIImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (1)
boolean sun.java2d.SunGraphics2D.drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (1)
boolean sun.java2d.SunGraphics2D.drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver) (1)
void com.apple.laf.AquaPainter$AquaSingleImagePainter.paintFromSingleCachedImage(java.awt.Graphics2D, apple.laf.JRSUIControl, apple.laf.JRSUIState, java.awt.Rectangle) (1)
void com.apple.laf.AquaPainter$AquaSingleImagePainter.paint(java.awt.Graphics2D, apple.laf.JRSUIState) (1)
void com.apple.laf.AquaPainter.paint(java.awt.Graphics, java.awt.Component, int, int, int, int) (1)
void com.apple.laf.AquaTextFieldBorder.paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent.paintBorder(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
java.lang.Void javax.swing.RepaintManager$4.run() (1)
java.lang.Object javax.swing.RepaintManager$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
void javax.swing.RepaintManager.paintDirtyRegions() (1)
void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
void java.awt.event.InvocationEvent.dispatch() (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

boolean java.awt.EventQueue.coalesceMouseEvent(java.awt.event.MouseEvent) (1)
boolean java.awt.EventQueue.coalesceEvent(java.awt.AWTEvent, int) (1)
void java.awt.EventQueue.postEvent(java.awt.AWTEvent, int) (1)
void java.awt.EventQueue.postEventPrivate(java.awt.AWTEvent) (1)
void java.awt.EventQueue.postEvent(java.awt.AWTEvent) (1)
void sun.awt.PostEventQueue.flush() (1)
void sun.awt.SunToolkit.flushPendingEvents(sun.awt.AppContext) (1)
java.awt.AWTEvent java.awt.EventQueue.getNextEvent() (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

void sun.java2d.SunGraphics2D.drawString(java.lang.String, int, int) (1)
void sun.swing.SwingUtilities2.drawString(javax.swing.JComponent, java.awt.Graphics, java.lang.String, int, int) (1)
void sun.swing.SwingUtilities2.drawStringUnderlineCharAt(javax.swing.JComponent, java.awt.Graphics, java.lang.String, int, int, int) (1)
void com.apple.laf.AquaLabelUI.paintEnabledText(javax.swing.JLabel, java.awt.Graphics, java.lang.String, int, int) (1)
void javax.swing.plaf.basic.BasicLabelUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
void sun.swing.table.DefaultTableCellHeaderRenderer.paintComponent(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void com.apple.laf.AquaTableHeaderBorder.paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent.paintBorder(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.CellRendererPane.paintComponent(java.awt.Graphics, java.awt.Component, java.awt.Container, int, int, int, int, boolean) (1)
void javax.swing.plaf.basic.BasicTableHeaderUI.paintCell(java.awt.Graphics, java.awt.Rectangle, int) (1)
void javax.swing.plaf.basic.BasicTableHeaderUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JViewport.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
java.lang.Void javax.swing.RepaintManager$4.run() (1)
java.lang.Object javax.swing.RepaintManager$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
void javax.swing.RepaintManager.paintDirtyRegions() (1)
void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
void java.awt.event.InvocationEvent.dispatch() (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)

char[] java.util.Arrays.copyOfRange(char[], int, int) (1)
void java.lang.String.<init>(char[], int, int) (1)
java.lang.String java.lang.String.substring(int) (1)
boolean java.io.ObjectStreamClass.classNamesEqual(java.lang.String, java.lang.String) (1)
void java.io.ObjectStreamClass.initNonProxy(java.io.ObjectStreamClass, java.lang.Class, java.lang.ClassNotFoundException, java.io.ObjectStreamClass) (1)
java.io.ObjectStreamClass java.io.ObjectInputStream.readNonProxyDesc(boolean) (1)
java.io.ObjectStreamClass java.io.ObjectInputStream.readClassDesc(boolean) (1)
java.lang.Object java.io.ObjectInputStream.readOrdinaryObject(boolean) (1)
java.lang.Object java.io.ObjectInputStream.readObject0(boolean) (1)
java.lang.Object java.io.ObjectInputStream.readObject() (1)
java.lang.Object sun.rmi.server.UnicastRef.unmarshalValue(java.lang.Class, java.io.ObjectInput) (1)
void sun.rmi.server.UnicastServerRef.dispatch(java.rmi.Remote, java.rmi.server.RemoteCall) (1)
java.lang.Void sun.rmi.transport.Transport$1.run() (1)
java.lang.Object sun.rmi.transport.Transport$1.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext) (1)
boolean sun.rmi.transport.Transport.serviceCall(java.rmi.server.RemoteCall) (1)
void sun.rmi.transport.tcp.TCPTransport.handleMessages(sun.rmi.transport.Connection, boolean) (1)
void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0() (1)
java.lang.Void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0() (1)
java.lang.Object sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$24.940244335.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run() (1)
void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (1)
void java.util.concurrent.ThreadPoolExecutor$Worker.run() (1)
void java.lang.Thread.run() (1)

java.util.HashMap$Node java.util.HashMap.newNode(int, java.lang.Object, java.lang.Object, java.util.HashMap$Node) (1)
java.lang.Object java.util.HashMap.putVal(int, java.lang.Object, java.lang.Object, boolean, boolean) (1)
java.lang.Object java.util.HashMap.put(java.lang.Object, java.lang.Object) (1)
boolean java.util.HashSet.add(java.lang.Object) (1)
void sun.awt.AWTAutoShutdown.notifyThreadBusy(java.lang.Thread) (1)
void java.awt.EventQueue.postEvent(java.awt.AWTEvent, int) (1)
void java.awt.EventQueue.postEventPrivate(java.awt.AWTEvent) (1)
void java.awt.EventQueue.postEvent(java.awt.AWTEvent) (1)
void sun.awt.PostEventQueue.flush() (1)
void sun.awt.SunToolkit.flushPendingEvents(sun.awt.AppContext) (1)
java.awt.AWTEvent java.awt.EventQueue.getNextEvent() (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

java.awt.AWTEvent java.awt.EventQueue.getNextEventPrivate() (1)
java.awt.AWTEvent java.awt.EventQueue.getNextEvent() (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

java.lang.String javax.swing.SwingUtilities.layoutCompoundLabel(javax.swing.JComponent, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, int, int, int, int, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle, int) (1)
java.lang.String javax.swing.plaf.basic.BasicLabelUI.layoutCL(javax.swing.JLabel, java.awt.FontMetrics, java.lang.String, javax.swing.Icon, java.awt.Rectangle, java.awt.Rectangle, java.awt.Rectangle) (1)
java.lang.String javax.swing.plaf.basic.BasicLabelUI.layout(javax.swing.JLabel, java.awt.FontMetrics, int, int) (1)
void javax.swing.plaf.basic.BasicLabelUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
void sun.swing.table.DefaultTableCellHeaderRenderer.paintComponent(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.CellRendererPane.paintComponent(java.awt.Graphics, java.awt.Component, java.awt.Container, int, int, int, int, boolean) (1)
void javax.swing.plaf.basic.BasicTableHeaderUI.paintCell(java.awt.Graphics, java.awt.Rectangle, int) (1)
void javax.swing.plaf.basic.BasicTableHeaderUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JViewport.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
java.lang.Void javax.swing.RepaintManager$4.run() (1)
java.lang.Object javax.swing.RepaintManager$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
void javax.swing.RepaintManager.paintDirtyRegions() (1)
void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
void java.awt.event.InvocationEvent.dispatch() (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

void sun.java2d.Disposer.addRecord(java.lang.Object, long, long) (1)
void sun.awt.image.BufImgSurfaceData.initRaster(java.lang.Object, int, int, int, int, int, int, java.awt.image.IndexColorModel) (1)
sun.java2d.SurfaceData sun.awt.image.BufImgSurfaceData.createDataIC(java.awt.image.BufferedImage, sun.java2d.loops.SurfaceType) (1)
sun.java2d.SurfaceData sun.awt.image.BufImgSurfaceData.createData(java.awt.image.BufferedImage) (1)
void sun.awt.image.BufImgSurfaceManager.<init>(java.awt.image.BufferedImage) (1)
sun.awt.image.SurfaceManager sun.awt.image.SurfaceManager.getManager(java.awt.Image) (1)
sun.java2d.SurfaceData sun.java2d.SurfaceData.getSourceSurfaceData(java.awt.Image, int, sun.java2d.loops.CompositeType, java.awt.Color) (1)
boolean sun.java2d.pipe.DrawImage.renderImageCopy(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.Color, int, int, int, int, int, int) (1)
boolean sun.java2d.pipe.DrawImage.tryCopyOrScale(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, java.awt.Color, int, double[]) (1)
void sun.java2d.pipe.DrawImage.transformImage(sun.java2d.SunGraphics2D, java.awt.Image, java.awt.geom.AffineTransform, int, int, int, int, int, java.awt.Color) (1)
boolean sun.java2d.pipe.DrawImage.scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color) (1)
boolean sun.java2d.pipe.DrawImage.scaleImage(sun.java2d.SunGraphics2D, java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (1)
boolean sun.java2d.SunGraphics2D.drawHiDPIImage(java.awt.Image, int, int, int, int, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (1)
boolean sun.java2d.SunGraphics2D.drawImage(java.awt.Image, int, int, int, int, java.awt.Color, java.awt.image.ImageObserver) (1)
boolean sun.java2d.SunGraphics2D.drawImage(java.awt.Image, int, int, int, int, java.awt.image.ImageObserver) (1)
void com.apple.laf.AquaPainter$AquaSingleImagePainter.paintFromSingleCachedImage(java.awt.Graphics2D, apple.laf.JRSUIControl, apple.laf.JRSUIState, java.awt.Rectangle) (1)
void com.apple.laf.AquaPainter$AquaSingleImagePainter.paint(java.awt.Graphics2D, apple.laf.JRSUIState) (1)
void com.apple.laf.AquaPainter.paint(java.awt.Graphics, java.awt.Component, int, int, int, int) (1)
void com.apple.laf.AquaTextFieldBorder.paintBorder(java.awt.Component, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent.paintBorder(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
java.lang.Void javax.swing.RepaintManager$4.run() (1)
java.lang.Object javax.swing.RepaintManager$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
void javax.swing.RepaintManager.paintDirtyRegions() (1)
void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
void java.awt.event.InvocationEvent.dispatch() (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)

void java.security.BasicPermission.<init>(java.lang.String) (1)
void java.lang.RuntimePermission.<init>(java.lang.String) (1)
void java.lang.Thread.setContextClassLoader(java.lang.ClassLoader) (1)
java.lang.ClassLoader javax.management.remote.rmi.RMIConnectionImpl$SetCcl.run() (1)
java.lang.Object javax.management.remote.rmi.RMIConnectionImpl$SetCcl.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction) (1)
java.lang.Object javax.management.remote.rmi.RMIConnectionImpl.unwrap(java.rmi.MarshalledObject, java.lang.ClassLoader, java.lang.Class) (1)
java.lang.Object javax.management.remote.rmi.RMIConnectionImpl.unwrap(java.rmi.MarshalledObject, java.lang.ClassLoader, java.lang.ClassLoader, java.lang.Class) (1)
java.lang.Object javax.management.remote.rmi.RMIConnectionImpl.invoke(javax.management.ObjectName, java.lang.String, java.rmi.MarshalledObject, java.lang.String[], javax.security.auth.Subject) (1)
java.lang.Object sun.reflect.GeneratedMethodAccessor19.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
void sun.rmi.server.UnicastServerRef.dispatch(java.rmi.Remote, java.rmi.server.RemoteCall) (1)
java.lang.Void sun.rmi.transport.Transport$1.run() (1)
java.lang.Object sun.rmi.transport.Transport$1.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedExceptionAction, java.security.AccessControlContext) (1)
boolean sun.rmi.transport.Transport.serviceCall(java.rmi.server.RemoteCall) (1)
void sun.rmi.transport.tcp.TCPTransport.handleMessages(sun.rmi.transport.Connection, boolean) (1)
void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0() (1)
java.lang.Void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0() (1)
java.lang.Object sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$24.940244335.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
void sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run() (1)
void java.util.concurrent.ThreadPoolExecutor.runWorker(java.util.concurrent.ThreadPoolExecutor$Worker) (1)
void java.util.concurrent.ThreadPoolExecutor$Worker.run() (1)
void java.lang.Thread.run() (1)

void sun.lwawt.LWCursorManager.updateCursorLater(sun.lwawt.LWWindowPeer) (1)
void sun.lwawt.LWWindowPeer.notifyUpdateCursor() (1)
void sun.lwawt.LWWindowPeer.notifyMouseEvent(int, long, int, int, int, int, int, int, int, boolean, byte[]) (1)
void sun.lwawt.macosx.CPlatformResponder.handleMouseEvent(int, int, int, int, int, int, int, int) (1)
void sun.lwawt.macosx.CPlatformView.deliverMouseEvent(sun.lwawt.macosx.NSEvent) (1)

void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
void java.io.ObjectOutputStream.writeObject(java.lang.Object) (1)
void java.util.TreeMap.writeObject(java.io.ObjectOutputStream) (1)
java.lang.Object sun.reflect.GeneratedMethodAccessor6.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (1)
void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
void java.io.ObjectOutputStream.writeObject(java.lang.Object) (1)
void java.util.TreeMap.writeObject(java.io.ObjectOutputStream) (1)
java.lang.Object sun.reflect.GeneratedMethodAccessor6.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (1)
void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.defaultWriteObject() (1)
void javax.management.Notification.writeObject(java.io.ObjectOutputStream) (1)
java.lang.Object sun.reflect.NativeMethodAccessorImpl.invoke0(java.lang.reflect.Method, java.lang.Object, java.lang.Object[]) (1)
java.lang.Object sun.reflect.NativeMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object sun.reflect.DelegatingMethodAccessorImpl.invoke(java.lang.Object, java.lang.Object[]) (1)
java.lang.Object java.lang.reflect.Method.invoke(java.lang.Object, java.lang.Object[]) (1)
void java.io.ObjectStreamClass.invokeWriteObject(java.lang.Object, java.io.ObjectOutputStream) (1)
void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
void java.io.ObjectOutputStream.writeArray(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
void java.io.ObjectOutputStream.defaultWriteFields(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeSerialData(java.lang.Object, java.io.ObjectStreamClass) (1)
void java.io.ObjectOutputStream.writeOrdinaryObject(java.lang.Object, java.io.ObjectStreamClass, boolean) (1)
void java.io.ObjectOutputStream.writeObject0(java.lang.Object, boolean) (1)
void java.io.ObjectOutputStream.writeObject(java.lang.Object) (1)
void sun.rmi.server.UnicastRef.marshalValue(java.lang.Class, java.lang.Object, java.io.ObjectOutput) (1)
void sun.rmi.server.UnicastServerRef.dispatch(java.rmi.Remote, java.rmi.server.RemoteCall) (1)
java.lang.Void sun.rmi.transport.Transport$1.run() (1)
java.lang.Object sun.rmi.transport.Transport$1.run() (1)

void javax.swing.JLabel.<init>(java.lang.String, javax.swing.Icon, int) (1)
void javax.swing.JLabel.<init>() (1)
void javax.swing.table.DefaultTableCellRenderer.<init>() (1)
void sun.tools.jconsole.ConnectDialog$LocalTabJTable$2.<init>(sun.tools.jconsole.ConnectDialog$LocalTabJTable) (1)
javax.swing.table.TableCellRenderer sun.tools.jconsole.ConnectDialog$LocalTabJTable.getCellRenderer(int, int) (1)
void javax.swing.plaf.basic.BasicTableUI.paintCell(java.awt.Graphics, java.awt.Rectangle, int, int) (1)
void javax.swing.plaf.basic.BasicTableUI.paintCells(java.awt.Graphics, int, int, int, int) (1)
void javax.swing.plaf.basic.BasicTableUI.paint(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.plaf.ComponentUI.update(java.awt.Graphics, javax.swing.JComponent) (1)
void javax.swing.JComponent.paintComponent(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JViewport.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintChildren(java.awt.Graphics) (1)
void javax.swing.JComponent.paint(java.awt.Graphics) (1)
void javax.swing.JLayeredPane.paint(java.awt.Graphics) (1)
void javax.swing.JComponent.paintToOffscreen(java.awt.Graphics, int, int, int, int, int, int) (1)
void javax.swing.RepaintManager$PaintManager.paintDoubleBuffered(javax.swing.JComponent, java.awt.Image, java.awt.Graphics, int, int, int, int) (1)
boolean javax.swing.RepaintManager$PaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.RepaintManager.paint(javax.swing.JComponent, javax.swing.JComponent, java.awt.Graphics, int, int, int, int) (1)
void javax.swing.JComponent._paintImmediately(int, int, int, int) (1)
void javax.swing.JComponent.paintImmediately(int, int, int, int) (1)
java.lang.Void javax.swing.RepaintManager$4.run() (1)
java.lang.Object javax.swing.RepaintManager$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void javax.swing.RepaintManager.paintDirtyRegions(java.util.Map) (1)
void javax.swing.RepaintManager.paintDirtyRegions() (1)
void javax.swing.RepaintManager.prePaintDirtyRegions() (1)
void javax.swing.RepaintManager.access$1300(javax.swing.RepaintManager) (1)
void javax.swing.RepaintManager$ProcessingRunnable.run() (1)
void java.awt.event.InvocationEvent.dispatch() (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

void java.awt.event.ComponentEvent.<init>(java.awt.Component, int) (1)
void java.awt.event.InputEvent.<init>(java.awt.Component, int, long, int) (1)
void java.awt.event.MouseEvent.<init>(java.awt.Component, int, long, int, int, int, int, int, int, boolean, int) (1)
void sun.lwawt.LWWindowPeer.notifyMouseEvent(int, long, int, int, int, int, int, int, int, boolean, byte[]) (1)
void sun.lwawt.macosx.CPlatformResponder.handleMouseEvent(int, int, int, int, int, int, int, int) (1)
void sun.lwawt.macosx.CPlatformView.deliverMouseEvent(sun.lwawt.macosx.NSEvent) (1)

void java.util.regex.Matcher.<init>(java.util.regex.Pattern, java.lang.CharSequence) (1)
java.util.regex.Matcher java.util.regex.Pattern.matcher(java.lang.CharSequence) (1)
java.util.Formatter$FormatString[] java.util.Formatter.parse(java.lang.String) (1)
java.util.Formatter java.util.Formatter.format(java.util.Locale, java.lang.String, java.lang.Object[]) (1)
java.util.Formatter java.util.Formatter.format(java.lang.String, java.lang.Object[]) (1)
java.lang.String java.lang.String.format(java.lang.String, java.lang.Object[]) (1)
void sun.tools.jconsole.ConnectDialog.valueChanged(javax.swing.event.ListSelectionEvent) (1)
void sun.tools.jconsole.ConnectDialog.revalidate() (1)
void javax.swing.DefaultDesktopManager.setBoundsForFrame(javax.swing.JComponent, int, int, int, int) (1)
void javax.swing.DefaultDesktopManager.dragFrame(javax.swing.JComponent, int, int) (1)
void com.apple.laf.AquaInternalFrameUI$AquaBorderListener.mouseDragged(java.awt.event.MouseEvent) (1)
void java.awt.Component.processMouseMotionEvent(java.awt.event.MouseEvent) (1)
void javax.swing.JComponent.processMouseMotionEvent(java.awt.event.MouseEvent) (1)
void java.awt.Component.processEvent(java.awt.AWTEvent) (1)
void java.awt.Container.processEvent(java.awt.AWTEvent) (1)
void java.awt.Component.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Container.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Component.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.LightweightDispatcher.retargetMouseEvent(java.awt.Component, int, java.awt.event.MouseEvent) (1)
boolean java.awt.LightweightDispatcher.processMouseEvent(java.awt.event.MouseEvent) (1)
boolean java.awt.LightweightDispatcher.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.Container.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Window.dispatchEventImpl(java.awt.AWTEvent) (1)
void java.awt.Component.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventQueue.dispatchEventImpl(java.awt.AWTEvent, java.lang.Object) (1)
void java.awt.EventQueue.access$500(java.awt.EventQueue, java.awt.AWTEvent, java.lang.Object) (1)
java.lang.Void java.awt.EventQueue$3.run() (1)
java.lang.Object java.awt.EventQueue$3.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Void java.awt.EventQueue$4.run() (1)
java.lang.Object java.awt.EventQueue$4.run() (1)
java.lang.Object java.security.AccessController.doPrivileged(java.security.PrivilegedAction, java.security.AccessControlContext) (1)
java.lang.Object java.security.ProtectionDomain$1.doIntersectionPrivilege(java.security.PrivilegedAction, java.security.AccessControlContext, java.security.AccessControlContext) (1)
void java.awt.EventQueue.dispatchEvent(java.awt.AWTEvent) (1)
void java.awt.EventDispatchThread.pumpOneEventForFilters(int) (1)
void java.awt.EventDispatchThread.pumpEventsForFilter(int, java.awt.Conditional, java.awt.EventFilter) (1)
void java.awt.EventDispatchThread.pumpEventsForHierarchy(int, java.awt.Conditional, java.awt.Component) (1)
void java.awt.EventDispatchThread.pumpEvents(int, java.awt.Conditional) (1)
void java.awt.EventDispatchThread.pumpEvents(java.awt.Conditional) (1)
void java.awt.EventDispatchThread.run() (1)

