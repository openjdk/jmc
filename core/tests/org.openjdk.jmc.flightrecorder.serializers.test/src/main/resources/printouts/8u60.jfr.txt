#
#  Copyright (c) 2018, Oracle and/or its affiliates. All rights reserved.
#
#  DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS FILE HEADER.
#
#  The contents of this file are subject to the terms of either the Universal Permissive License 
#  v 1.0 as shown at http://oss.oracle.com/licenses/upl
#   
#  or the following license:
#   
#  Redistribution and use in source and binary forms, with or without modification, are permitted
#  provided that the following conditions are met:
#   
#  1. Redistributions of source code must retain the above copyright notice, this list of conditions
#  and the following disclaimer.
#   
#  2. Redistributions in binary form must reproduce the above copyright notice, this list of
#  conditions and the following disclaimer in the documentation and/or other materials provided with
#  the distribution.
#   
#  3. Neither the name of the copyright holder nor the names of its contributors may be used to
#  endorse or promote products derived from this software without specific prior written permission.
#
#  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR
#  IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND
#  FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR
#  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
#  DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
#  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
#  WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059125515240555 epochns</(endTime)>
  <eventThread name="Thread">VM JFR Buffer Thread</eventThread>
  <stackTrace>
     <frame method="java.util.AbstractCollection#toArray()[Ljava/lang/Object;" modifier="public" line="136" type="INTERPRETED"/>
     <frame method="java.util.ArrayList#<init>(Ljava/util/Collection;)V" modifier="public" line="177" type="INTERPRETED"/>
     <frame method="oracle.jrockit.jfr.JFRImpl#getRecordings()Ljava/util/Collection;" modifier="final" line="590" type="INTERPRETED"/>
     <frame method="oracle.jrockit.jfr.MetaProducer#onNewChunk()V" modifier="" line="70" type="INTERPRETED"/>
     <frame method="oracle.jrockit.jfr.JFRImpl#onNewChunk()V" modifier="final" line="559" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">java.lang.Object[]</objectClass>
  <allocationSize name="Allocation Size">24 B</allocationSize>
  <tlabSize name="TLAB Size">33576 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059125557430743 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectInputStream$BlockDataInputStream#<init>(Ljava/io/ObjectInputStream;Ljava/io/InputStream;)V" modifier="" line="2388" type="INTERPRETED"/>
     <frame method="java.io.ObjectInputStream#<init>(Ljava/io/InputStream;)V" modifier="public" line="295" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalInputStream#<init>(Ljava/io/InputStream;)V" modifier="public" line="124" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.ConnectionInputStream#<init>(Ljava/io/InputStream;)V" modifier="" line="56" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getInputStream()Ljava/io/ObjectInput;" modifier="public" line="134" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="166" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).char[]</objectClass>
  <allocationSize name="Allocation Size">528 B</allocationSize>
  <tlabSize name="TLAB Size">16624 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059125558298330 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#clone()Ljava/lang/Object;" modifier="protected native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Constructor#getParameterTypes()[Ljava/lang/Class;" modifier="public" line="216" type="INTERPRETED"/>
     <frame method="java.lang.Class#getConstructor0([Ljava/lang/Class;I)Ljava/lang/reflect/Constructor;" modifier="private" line="3078" type="INTERPRETED"/>
     <frame method="java.lang.Class#getDeclaredConstructor([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" modifier="public transient" line="2178" type="INTERPRETED"/>
     <frame method="java.io.ObjectStreamClass#getSerializableConstructor(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" modifier="private static" line="1368" type="INTERPRETED"/>
     <frame method="java.io.ObjectStreamClass#access$1500(Ljava/lang/Class;)Ljava/lang/reflect/Constructor;" modifier="static" line="72" type="INTERPRETED"/>
     <frame method="java.io.ObjectStreamClass$2#run()Ljava/lang/Void;" modifier="public" line="493" type="INTERPRETED"/>
     <frame method="java.io.ObjectStreamClass$2#run()Ljava/lang/Object;" modifier="public volatile" line="468" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#<init>(Ljava/lang/Class;)V" modifier="private" line="468" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#lookup(Ljava/lang/Class;Z)Ljava/io/ObjectStreamClass;" modifier="static" line="365" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1134" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.TreeMap#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="2434" type="JIT_COMPILED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor6#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.TreeMap#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="2434" type="JIT_COMPILED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor6#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.ArrayList#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="762" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor15#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastRef#marshalValue(Ljava/lang/Class;Ljava/lang/Object;Ljava/io/ObjectOutput;)V" modifier="protected static" line="294" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="333" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">java.lang.Class[]</objectClass>
  <allocationSize name="Allocation Size">16 B</allocationSize>
  <tlabSize name="TLAB Size">16112 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059125560575156 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.lang.Class#getDeclaredMethods0(Z)[Ljava/lang/reflect/Method;" modifier="private native" line="-1" type="INTERPRETED"/>
     <frame method="java.lang.Class#privateGetDeclaredMethods(Z)[Ljava/lang/reflect/Method;" modifier="private" line="2701" type="INTERPRETED"/>
     <frame method="java.lang.Class#getDeclaredMethod(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;" modifier="public transient" line="2128" type="INTERPRETED"/>
     <frame method="java.io.ObjectStreamClass#getPrivateMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Method;" modifier="private static" line="1431" type="INTERPRETED"/>
     <frame method="java.io.ObjectStreamClass#access$1700(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Method;" modifier="static" line="72" type="INTERPRETED"/>
     <frame method="java.io.ObjectStreamClass$2#run()Ljava/lang/Void;" modifier="public" line="494" type="INTERPRETED"/>
     <frame method="java.io.ObjectStreamClass$2#run()Ljava/lang/Object;" modifier="public volatile" line="468" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#<init>(Ljava/lang/Class;)V" modifier="private" line="468" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#lookup(Ljava/lang/Class;Z)Ljava/io/ObjectStreamClass;" modifier="static" line="365" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1134" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.TreeMap#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="2434" type="JIT_COMPILED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor6#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.TreeMap#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="2434" type="JIT_COMPILED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor6#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.ArrayList#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="762" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor15#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastRef#marshalValue(Ljava/lang/Class;Ljava/lang/Object;Ljava/io/ObjectOutput;)V" modifier="protected static" line="294" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="333" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).byte[]</objectClass>
  <allocationSize name="Allocation Size">24 B</allocationSize>
  <tlabSize name="TLAB Size">16120 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059126493985474 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <stackTrace>
     <frame method="java.util.TimerThread#mainLoop()V" modifier="private" line="555" type="INTERPRETED"/>
     <frame method="java.util.TimerThread#run()V" modifier="public" line="505" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">java.lang.Class</objectClass>
  <allocationSize name="Allocation Size">104 B</allocationSize>
  <tlabSize name="TLAB Size">42032 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059126584140915 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.util.Arrays#copyOfRange([CII)[C" modifier="public static" line="3664" type="JIT_COMPILED"/>
     <frame method="java.lang.String#<init>([CII)V" modifier="public" line="207" type="JIT_COMPILED"/>
     <frame method="java.lang.StringBuilder#toString()Ljava/lang/String;" modifier="public" line="407" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream$BlockDataInputStream#readUTFBody(J)Ljava/lang/String;" modifier="private" line="3079" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream$BlockDataInputStream#readUTF()Ljava/lang/String;" modifier="public" line="2874" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readString(Z)Ljava/lang/String;" modifier="private" line="1639" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readObject0(Z)Ljava/lang/Object;" modifier="private" line="1342" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readObject()Ljava/lang/Object;" modifier="public final" line="371" type="JIT_COMPILED"/>
     <frame method="javax.management.ObjectName#readObject(Ljava/io/ObjectInputStream;)V" modifier="private" line="1149" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor5#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeReadObject(Ljava/lang/Object;Ljava/io/ObjectInputStream;)V" modifier="" line="1017" type="INTERPRETED"/>
     <frame method="java.io.ObjectInputStream#readSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1900" type="INTERPRETED"/>
     <frame method="java.io.ObjectInputStream#readOrdinaryObject(Z)Ljava/lang/Object;" modifier="private" line="1801" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readObject0(Z)Ljava/lang/Object;" modifier="private" line="1351" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readObject()Ljava/lang/Object;" modifier="public final" line="371" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastRef#unmarshalValue(Ljava/lang/Class;Ljava/io/ObjectInput;)Ljava/lang/Object;" modifier="protected static" line="326" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="308" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).char[]</objectClass>
  <allocationSize name="Allocation Size">104 B</allocationSize>
  <tlabSize name="TLAB Size">16200 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059126587045457 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectOutputStream$HandleTable#growEntries()V" modifier="private" line="2351" type="INTERPRETED"/>
     <frame method="java.io.ObjectOutputStream$HandleTable#assign(Ljava/lang/Object;)I" modifier="" line="2276" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeString(Ljava/lang/String;Z)V" modifier="private" line="1302" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1172" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.TreeMap#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="2434" type="JIT_COMPILED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor6#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastRef#marshalValue(Ljava/lang/Class;Ljava/lang/Object;Ljava/io/ObjectOutput;)V" modifier="protected static" line="294" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="333" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">java.lang.Object[]</objectClass>
  <allocationSize name="Allocation Size">192 B</allocationSize>
  <tlabSize name="TLAB Size">16288 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059126591344445 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectOutputStream$BlockDataOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="" line="1754" type="INTERPRETED"/>
     <frame method="java.io.ObjectOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="242" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;I)V" modifier="public" line="64" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="55" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.ConnectionOutputStream#<init>(Lsun/rmi/transport/Connection;Z)V" modifier="" line="62" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getOutputStream(Z)Ljava/io/ObjectOutput;" modifier="private" line="102" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getResultStream(Z)Ljava/io/ObjectOutput;" modifier="public" line="190" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="330" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).char[]</objectClass>
  <allocationSize name="Allocation Size">528 B</allocationSize>
  <tlabSize name="TLAB Size">16624 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059126592115412 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectOutputStream$HandleTable#<init>(IF)V" modifier="" line="2265" type="INTERPRETED"/>
     <frame method="java.io.ObjectOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="243" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;I)V" modifier="public" line="64" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="55" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.ConnectionOutputStream#<init>(Lsun/rmi/transport/Connection;Z)V" modifier="" line="62" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getOutputStream(Z)Ljava/io/ObjectOutput;" modifier="private" line="102" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getResultStream(Z)Ljava/io/ObjectOutput;" modifier="public" line="190" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="330" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">java.lang.Object[]</objectClass>
  <allocationSize name="Allocation Size">56 B</allocationSize>
  <tlabSize name="TLAB Size">16152 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059127599870870 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.util.Arrays#copyOfRange([CII)[C" modifier="public static" line="3664" type="JIT_COMPILED"/>
     <frame method="java.lang.String#<init>([CII)V" modifier="public" line="207" type="JIT_COMPILED"/>
     <frame method="java.lang.StringBuilder#toString()Ljava/lang/String;" modifier="public" line="407" type="JIT_COMPILED"/>
     <frame method="java.net.InetAddress#toString()Ljava/lang/String;" modifier="public" line="726" type="INTERPRETED"/>
     <frame method="java.net.SocketOutputStream#socketWrite([BII)V" modifier="private" line="41" type="INTERPRETED"/>
     <frame method="java.net.SocketOutputStream#write([BII)V" modifier="public" line="153" type="INTERPRETED"/>
     <frame method="java.io.BufferedOutputStream#flushBuffer()V" modifier="private" line="82" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedOutputStream#flush()V" modifier="public synchronized" line="140" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream$BlockDataOutputStream#flush()V" modifier="public" line="1823" type="INTERPRETED"/>
     <frame method="java.io.ObjectOutputStream#flush()V" modifier="public" line="719" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#releaseOutputStream()V" modifier="public" line="115" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="364" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).char[]</objectClass>
  <allocationSize name="Allocation Size">48 B</allocationSize>
  <tlabSize name="TLAB Size">16144 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059128603182814 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.lang.AbstractStringBuilder#<init>(I)V" modifier="" line="68" type="JIT_COMPILED"/>
     <frame method="java.lang.StringBuilder#<init>()V" modifier="public" line="89" type="JIT_COMPILED"/>
     <frame method="java.net.InetAddress#toString()Ljava/lang/String;" modifier="public" line="725" type="INTERPRETED"/>
     <frame method="java.net.SocketInputStream#read([BIII)I" modifier="" line="40" type="INTERPRETED"/>
     <frame method="java.net.SocketInputStream#read([BII)I" modifier="public" line="141" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#fill()V" modifier="private" line="246" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#read()I" modifier="public synchronized" line="265" type="JIT_COMPILED"/>
     <frame method="java.io.FilterInputStream#read()I" modifier="public" line="83" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="550" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).char[]</objectClass>
  <allocationSize name="Allocation Size">48 B</allocationSize>
  <tlabSize name="TLAB Size">16144 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059128604207258 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.lang.ClassLoader#findLoadedClass0(Ljava/lang/String;)Ljava/lang/Class;" modifier="private final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.lang.ClassLoader#findLoadedClass(Ljava/lang/String;)Ljava/lang/Class;" modifier="protected final" line="1035" type="JIT_COMPILED"/>
     <frame method="java.lang.ClassLoader#loadClass(Ljava/lang/String;Z)Ljava/lang/Class;" modifier="protected" line="406" type="JIT_COMPILED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl$CombinedClassLoader$ClassLoaderWrapper#loadClass(Ljava/lang/String;Z)Ljava/lang/Class;" modifier="protected" line="1787" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl$CombinedClassLoader#loadClass(Ljava/lang/String;Z)Ljava/lang/Class;" modifier="protected" line="1811" type="INTERPRETED"/>
     <frame method="java.lang.ClassLoader#loadClass(Ljava/lang/String;)Ljava/lang/Class;" modifier="public" line="357" type="INTERPRETED"/>
     <frame method="java.lang.Class#forName0(Ljava/lang/String;ZLjava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Class;" modifier="private static native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.lang.Class#forName(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;" modifier="public static" line="348" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.LoaderHandler#loadClass([Ljava/net/URL;Ljava/lang/String;)Ljava/lang/Class;" modifier="private static" line="378" type="INTERPRETED"/>
     <frame method="sun.rmi.server.LoaderHandler#loadClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;" modifier="public static" line="186" type="INTERPRETED"/>
     <frame method="java.rmi.server.RMIClassLoader$2#loadClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;" modifier="public" line="637" type="JIT_COMPILED"/>
     <frame method="java.rmi.server.RMIClassLoader#loadClass(Ljava/lang/String;Ljava/lang/String;Ljava/lang/ClassLoader;)Ljava/lang/Class;" modifier="public static" line="264" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.MarshalInputStream#resolveClass(Ljava/io/ObjectStreamClass;)Ljava/lang/Class;" modifier="protected" line="214" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readNonProxyDesc(Z)Ljava/io/ObjectStreamClass;" modifier="private" line="1613" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readClassDesc(Z)Ljava/io/ObjectStreamClass;" modifier="private" line="1518" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readArray(Z)Ljava/lang/Object;" modifier="private" line="1664" type="INTERPRETED"/>
     <frame method="java.io.ObjectInputStream#readObject0(Z)Ljava/lang/Object;" modifier="private" line="1345" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readObject()Ljava/lang/Object;" modifier="public final" line="371" type="JIT_COMPILED"/>
     <frame method="java.rmi.MarshalledObject#get()Ljava/lang/Object;" modifier="public" line="160" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#unwrap(Ljava/rmi/MarshalledObject;Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Object;" modifier="private static" line="1567" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#unwrap(Ljava/rmi/MarshalledObject;Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Object;" modifier="private static" line="1604" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#invoke(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/rmi/MarshalledObject;[Ljava/lang/String;Ljavax/security/auth/Subject;)Ljava/lang/Object;" modifier="public" line="814" type="INTERPRETED"/>
     <frame method="sun.reflect.NativeMethodAccessorImpl#invoke0(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="private static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.reflect.NativeMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="62" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="323" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).char[]</objectClass>
  <allocationSize name="Allocation Size">48 B</allocationSize>
  <tlabSize name="TLAB Size">16144 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059128605660697 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectOutputStream$BlockDataOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="" line="1754" type="INTERPRETED"/>
     <frame method="java.io.ObjectOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="242" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;I)V" modifier="public" line="64" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="55" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.ConnectionOutputStream#<init>(Lsun/rmi/transport/Connection;Z)V" modifier="" line="62" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getOutputStream(Z)Ljava/io/ObjectOutput;" modifier="private" line="102" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getResultStream(Z)Ljava/io/ObjectOutput;" modifier="public" line="190" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="330" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).char[]</objectClass>
  <allocationSize name="Allocation Size">528 B</allocationSize>
  <tlabSize name="TLAB Size">16624 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059129610791394 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.util.Arrays#copyOfRange([CII)[C" modifier="public static" line="3664" type="JIT_COMPILED"/>
     <frame method="java.lang.String#<init>([CII)V" modifier="public" line="207" type="JIT_COMPILED"/>
     <frame method="javax.management.ObjectName#setCanonicalName([C[C[Ljava/lang/String;Ljava/util/Map;II)V" modifier="private" line="832" type="INTERPRETED"/>
     <frame method="javax.management.ObjectName#construct(Ljava/lang/String;)V" modifier="private" line="660" type="JIT_COMPILED"/>
     <frame method="javax.management.ObjectName#readObject(Ljava/io/ObjectInputStream;)V" modifier="private" line="1153" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor5#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeReadObject(Ljava/lang/Object;Ljava/io/ObjectInputStream;)V" modifier="" line="1017" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1900" type="INTERPRETED"/>
     <frame method="java.io.ObjectInputStream#readOrdinaryObject(Z)Ljava/lang/Object;" modifier="private" line="1801" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readObject0(Z)Ljava/lang/Object;" modifier="private" line="1351" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readObject()Ljava/lang/Object;" modifier="public final" line="371" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastRef#unmarshalValue(Ljava/lang/Class;Ljava/io/ObjectInput;)Ljava/lang/Object;" modifier="protected static" line="326" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="308" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).char[]</objectClass>
  <allocationSize name="Allocation Size">96 B</allocationSize>
  <tlabSize name="TLAB Size">16192 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059130616313324 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.util.Arrays#copyOfRange([CII)[C" modifier="public static" line="3664" type="JIT_COMPILED"/>
     <frame method="java.lang.String#<init>([CII)V" modifier="public" line="207" type="JIT_COMPILED"/>
     <frame method="java.lang.StringBuilder#toString()Ljava/lang/String;" modifier="public" line="407" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream$BlockDataInputStream#readUTFBody(J)Ljava/lang/String;" modifier="private" line="3079" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream$BlockDataInputStream#readUTF()Ljava/lang/String;" modifier="public" line="2874" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readString(Z)Ljava/lang/String;" modifier="private" line="1639" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readObject0(Z)Ljava/lang/Object;" modifier="private" line="1342" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readObject()Ljava/lang/Object;" modifier="public final" line="371" type="JIT_COMPILED"/>
     <frame method="javax.management.ObjectName#readObject(Ljava/io/ObjectInputStream;)V" modifier="private" line="1149" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor5#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeReadObject(Ljava/lang/Object;Ljava/io/ObjectInputStream;)V" modifier="" line="1017" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1900" type="INTERPRETED"/>
     <frame method="java.io.ObjectInputStream#readOrdinaryObject(Z)Ljava/lang/Object;" modifier="private" line="1801" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readObject0(Z)Ljava/lang/Object;" modifier="private" line="1351" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectInputStream#readObject()Ljava/lang/Object;" modifier="public final" line="371" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastRef#unmarshalValue(Ljava/lang/Class;Ljava/io/ObjectInput;)Ljava/lang/Object;" modifier="protected static" line="326" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="308" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).char[]</objectClass>
  <allocationSize name="Allocation Size">104 B</allocationSize>
  <tlabSize name="TLAB Size">16200 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059130621574275 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectOutputStream$HandleTable#growEntries()V" modifier="private" line="2351" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream$HandleTable#assign(Ljava/lang/Object;)I" modifier="" line="2276" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeString(Ljava/lang/String;Z)V" modifier="private" line="1302" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1172" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.TreeMap#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="2434" type="JIT_COMPILED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor6#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastRef#marshalValue(Ljava/lang/Class;Ljava/lang/Object;Ljava/io/ObjectOutput;)V" modifier="protected static" line="294" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="333" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">java.lang.Object[]</objectClass>
  <allocationSize name="Allocation Size">192 B</allocationSize>
  <tlabSize name="TLAB Size">16288 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059130623034251 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1537" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.TreeMap#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="2434" type="JIT_COMPILED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor6#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.TreeMap#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="2434" type="JIT_COMPILED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor6#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.ArrayList#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="762" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor15#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastRef#marshalValue(Ljava/lang/Class;Ljava/lang/Object;Ljava/io/ObjectOutput;)V" modifier="protected static" line="294" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="333" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">java.lang.Object[]</objectClass>
  <allocationSize name="Allocation Size">16 B</allocationSize>
  <tlabSize name="TLAB Size">16112 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059131626286612 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectOutputStream$BlockDataOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="" line="1754" type="INTERPRETED"/>
     <frame method="java.io.ObjectOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="242" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;I)V" modifier="public" line="64" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="55" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.ConnectionOutputStream#<init>(Lsun/rmi/transport/Connection;Z)V" modifier="" line="62" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getOutputStream(Z)Ljava/io/ObjectOutput;" modifier="private" line="102" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getResultStream(Z)Ljava/io/ObjectOutput;" modifier="public" line="190" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="330" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).char[]</objectClass>
  <allocationSize name="Allocation Size">528 B</allocationSize>
  <tlabSize name="TLAB Size">16624 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059132634122920 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectInputStream$BlockDataInputStream#<init>(Ljava/io/ObjectInputStream;Ljava/io/InputStream;)V" modifier="" line="2386" type="INTERPRETED"/>
     <frame method="java.io.ObjectInputStream#<init>(Ljava/io/InputStream;)V" modifier="public" line="295" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalInputStream#<init>(Ljava/io/InputStream;)V" modifier="public" line="124" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.ConnectionInputStream#<init>(Ljava/io/InputStream;)V" modifier="" line="56" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getInputStream()Ljava/io/ObjectInput;" modifier="public" line="134" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="166" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).byte[]</objectClass>
  <allocationSize name="Allocation Size">24 B</allocationSize>
  <tlabSize name="TLAB Size">16120 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059133639190105 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectInputStream$BlockDataInputStream#<init>(Ljava/io/ObjectInputStream;Ljava/io/InputStream;)V" modifier="" line="2388" type="INTERPRETED"/>
     <frame method="java.io.ObjectInputStream#<init>(Ljava/io/InputStream;)V" modifier="public" line="295" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalInputStream#<init>(Ljava/io/InputStream;)V" modifier="public" line="124" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.ConnectionInputStream#<init>(Ljava/io/InputStream;)V" modifier="" line="56" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getInputStream()Ljava/io/ObjectInput;" modifier="public" line="134" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="166" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).char[]</objectClass>
  <allocationSize name="Allocation Size">528 B</allocationSize>
  <tlabSize name="TLAB Size">16624 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059133640068802 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectOutputStream$BlockDataOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="" line="1754" type="INTERPRETED"/>
     <frame method="java.io.ObjectOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="242" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;I)V" modifier="public" line="64" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="55" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.ConnectionOutputStream#<init>(Lsun/rmi/transport/Connection;Z)V" modifier="" line="62" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getOutputStream(Z)Ljava/io/ObjectOutput;" modifier="private" line="102" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getResultStream(Z)Ljava/io/ObjectOutput;" modifier="public" line="190" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="330" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).char[]</objectClass>
  <allocationSize name="Allocation Size">528 B</allocationSize>
  <tlabSize name="TLAB Size">16624 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059133641191700 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectStreamClass#lookup(Ljava/lang/Class;Z)Ljava/io/ObjectStreamClass;" modifier="static" line="322" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1134" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.TreeMap#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="2434" type="JIT_COMPILED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor6#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.TreeMap#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="2434" type="JIT_COMPILED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor6#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#defaultWriteFields(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1548" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1509" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="java.util.ArrayList#writeObject(Ljava/io/ObjectOutputStream;)V" modifier="private" line="762" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor15#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectStreamClass#invokeWriteObject(Ljava/lang/Object;Ljava/io/ObjectOutputStream;)V" modifier="" line="988" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeSerialData(Ljava/lang/Object;Ljava/io/ObjectStreamClass;)V" modifier="private" line="1496" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeOrdinaryObject(Ljava/lang/Object;Ljava/io/ObjectStreamClass;Z)V" modifier="private" line="1432" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject0(Ljava/lang/Object;Z)V" modifier="private" line="1178" type="JIT_COMPILED"/>
     <frame method="java.io.ObjectOutputStream#writeObject(Ljava/lang/Object;)V" modifier="public final" line="348" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastRef#marshalValue(Ljava/lang/Class;Ljava/lang/Object;Ljava/io/ObjectOutput;)V" modifier="protected static" line="294" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="333" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">java.io.ObjectStreamClass$WeakClassKey</objectClass>
  <allocationSize name="Allocation Size">32 B</allocationSize>
  <tlabSize name="TLAB Size">16128 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059134648424521 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectInputStream$BlockDataInputStream#<init>(Ljava/io/ObjectInputStream;Ljava/io/InputStream;)V" modifier="" line="2388" type="INTERPRETED"/>
     <frame method="java.io.ObjectInputStream#<init>(Ljava/io/InputStream;)V" modifier="public" line="295" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalInputStream#<init>(Ljava/io/InputStream;)V" modifier="public" line="124" type="INTERPRETED"/>
     <frame method="java.rmi.MarshalledObject$MarshalledObjectInputStream#<init>(Ljava/io/InputStream;Ljava/io/InputStream;)V" modifier="" line="301" type="INTERPRETED"/>
     <frame method="java.rmi.MarshalledObject#get()Ljava/lang/Object;" modifier="public" line="157" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#unwrap(Ljava/rmi/MarshalledObject;Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Object;" modifier="private static" line="1567" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#unwrap(Ljava/rmi/MarshalledObject;Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Object;" modifier="private static" line="1604" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#invoke(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/rmi/MarshalledObject;[Ljava/lang/String;Ljavax/security/auth/Subject;)Ljava/lang/Object;" modifier="public" line="814" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor19#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="323" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).char[]</objectClass>
  <allocationSize name="Allocation Size">528 B</allocationSize>
  <tlabSize name="TLAB Size">16624 B</tlabSize>
</event>
<event name="Allocation in new TLAB" path="jdk.ObjectAllocationInNewTLAB">
  <(endTime) name="End Time">1524059135655035245 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="sun.misc.Unsafe#defineClass(Ljava/lang/String;[BIILjava/lang/ClassLoader;Ljava/security/ProtectionDomain;)Ljava/lang/Class;" modifier="public native" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.ClassDefiner#defineClass(Ljava/lang/String;[BIILjava/lang/ClassLoader;)Ljava/lang/Class;" modifier="static" line="63" type="INTERPRETED"/>
     <frame method="sun.reflect.MethodAccessorGenerator$1#run()Lsun/reflect/MagicAccessorImpl;" modifier="public" line="399" type="INTERPRETED"/>
     <frame method="sun.reflect.MethodAccessorGenerator$1#run()Ljava/lang/Object;" modifier="public volatile" line="394" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.reflect.MethodAccessorGenerator#generate(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;[Ljava/lang/Class;IZZLjava/lang/Class;)Lsun/reflect/MagicAccessorImpl;" modifier="private" line="393" type="INTERPRETED"/>
     <frame method="sun.reflect.MethodAccessorGenerator#generateMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;[Ljava/lang/Class;I)Lsun/reflect/MethodAccessor;" modifier="public" line="75" type="JIT_COMPILED"/>
     <frame method="sun.reflect.NativeMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="53" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="sun.reflect.misc.Trampoline#invoke(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="private static" line="71" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor1#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="sun.reflect.misc.MethodUtil#invoke(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public static" line="275" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.ConvertingMethod#invokeWithOpenReturn(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="private" line="193" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.ConvertingMethod#invokeWithOpenReturn(Lcom/sun/jmx/mbeanserver/MXBeanLookup;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="" line="175" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.MXBeanIntrospector#invokeM2(Lcom/sun/jmx/mbeanserver/ConvertingMethod;Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" modifier="" line="117" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.MXBeanIntrospector#invokeM2(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" modifier="volatile" line="54" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.MBeanIntrospector#invokeM(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" modifier="final" line="237" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.PerInterface#invoke(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" modifier="" line="138" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.MBeanSupport#invoke(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;" modifier="public final" line="252" type="INTERPRETED"/>
     <frame method="javax.management.StandardMBean#invoke(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;" modifier="public" line="405" type="INTERPRETED"/>
     <frame method="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor#invoke(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;" modifier="public" line="819" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.JmxMBeanServer#invoke(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;" modifier="public" line="801" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#doOperation(I[Ljava/lang/Object;)Ljava/lang/Object;" modifier="private" line="1471" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#access$300(Ljavax/management/remote/rmi/RMIConnectionImpl;I[Ljava/lang/Object;)Ljava/lang/Object;" modifier="static" line="76" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation#run()Ljava/lang/Object;" modifier="public" line="1312" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#doPrivilegedOperation(I[Ljava/lang/Object;Ljavax/security/auth/Subject;)Ljava/lang/Object;" modifier="private" line="1404" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#invoke(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/rmi/MarshalledObject;[Ljava/lang/String;Ljavax/security/auth/Subject;)Ljava/lang/Object;" modifier="public" line="832" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor19#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="323" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">java.lang.Class</objectClass>
  <allocationSize name="Allocation Size">104 B</allocationSize>
  <tlabSize name="TLAB Size">16200 B</tlabSize>
</event>
<event name="Allocation outside TLAB" path="jdk.ObjectAllocationOutsideTLAB">
  <(endTime) name="End Time">1524059126592095392 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectOutputStream$BlockDataOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="" line="1750" type="INTERPRETED"/>
     <frame method="java.io.ObjectOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="242" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;I)V" modifier="public" line="64" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="55" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.ConnectionOutputStream#<init>(Lsun/rmi/transport/Connection;Z)V" modifier="" line="62" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getOutputStream(Z)Ljava/io/ObjectOutput;" modifier="private" line="102" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getResultStream(Z)Ljava/io/ObjectOutput;" modifier="public" line="190" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="330" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).byte[]</objectClass>
  <allocationSize name="Allocation Size">1040 B</allocationSize>
</event>
<event name="Allocation outside TLAB" path="jdk.ObjectAllocationOutsideTLAB">
  <(endTime) name="End Time">1524059131626269623 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectOutputStream$BlockDataOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="" line="1750" type="INTERPRETED"/>
     <frame method="java.io.ObjectOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="242" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;I)V" modifier="public" line="64" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalOutputStream#<init>(Ljava/io/OutputStream;)V" modifier="public" line="55" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.ConnectionOutputStream#<init>(Lsun/rmi/transport/Connection;Z)V" modifier="" line="62" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getOutputStream(Z)Ljava/io/ObjectOutput;" modifier="private" line="102" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getResultStream(Z)Ljava/io/ObjectOutput;" modifier="public" line="190" type="INTERPRETED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="330" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).byte[]</objectClass>
  <allocationSize name="Allocation Size">1040 B</allocationSize>
</event>
<event name="Allocation outside TLAB" path="jdk.ObjectAllocationOutsideTLAB">
  <(endTime) name="End Time">1524059133639154088 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectInputStream$BlockDataInputStream#<init>(Ljava/io/ObjectInputStream;Ljava/io/InputStream;)V" modifier="" line="2384" type="INTERPRETED"/>
     <frame method="java.io.ObjectInputStream#<init>(Ljava/io/InputStream;)V" modifier="public" line="295" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalInputStream#<init>(Ljava/io/InputStream;)V" modifier="public" line="124" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.ConnectionInputStream#<init>(Ljava/io/InputStream;)V" modifier="" line="56" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.StreamRemoteCall#getInputStream()Ljava/io/ObjectInput;" modifier="public" line="134" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="166" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).byte[]</objectClass>
  <allocationSize name="Allocation Size">1040 B</allocationSize>
</event>
<event name="Allocation outside TLAB" path="jdk.ObjectAllocationOutsideTLAB">
  <(endTime) name="End Time">1524059134648389258 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.io.ObjectInputStream$BlockDataInputStream#<init>(Ljava/io/ObjectInputStream;Ljava/io/InputStream;)V" modifier="" line="2384" type="INTERPRETED"/>
     <frame method="java.io.ObjectInputStream#<init>(Ljava/io/InputStream;)V" modifier="public" line="295" type="INTERPRETED"/>
     <frame method="sun.rmi.server.MarshalInputStream#<init>(Ljava/io/InputStream;)V" modifier="public" line="124" type="INTERPRETED"/>
     <frame method="java.rmi.MarshalledObject$MarshalledObjectInputStream#<init>(Ljava/io/InputStream;Ljava/io/InputStream;)V" modifier="" line="301" type="INTERPRETED"/>
     <frame method="java.rmi.MarshalledObject#get()Ljava/lang/Object;" modifier="public" line="157" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#unwrap(Ljava/rmi/MarshalledObject;Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Object;" modifier="private static" line="1567" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#unwrap(Ljava/rmi/MarshalledObject;Ljava/lang/ClassLoader;Ljava/lang/ClassLoader;Ljava/lang/Class;)Ljava/lang/Object;" modifier="private static" line="1604" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#invoke(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/rmi/MarshalledObject;[Ljava/lang/String;Ljavax/security/auth/Subject;)Ljava/lang/Object;" modifier="public" line="814" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor19#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="323" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).byte[]</objectClass>
  <allocationSize name="Allocation Size">1040 B</allocationSize>
</event>
<event name="Allocation outside TLAB" path="jdk.ObjectAllocationOutsideTLAB">
  <(endTime) name="End Time">1524059135654883494 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="sun.reflect.ByteVectorImpl#resize(I)V" modifier="private" line="84" type="INTERPRETED"/>
     <frame method="sun.reflect.ByteVectorImpl#add(B)V" modifier="public" line="63" type="JIT_COMPILED"/>
     <frame method="sun.reflect.ClassFileAssembler#emitByte(B)V" modifier="public" line="74" type="JIT_COMPILED"/>
     <frame method="sun.reflect.ClassFileAssembler#append(Lsun/reflect/ByteVector;)V" modifier="public" line="83" type="JIT_COMPILED"/>
     <frame method="sun.reflect.ClassFileAssembler#append(Lsun/reflect/ClassFileAssembler;)V" modifier="public" line="78" type="INTERPRETED"/>
     <frame method="sun.reflect.AccessorGenerator#emitMethod(SILsun/reflect/ClassFileAssembler;Lsun/reflect/ClassFileAssembler;[S)V" modifier="protected" line="480" type="INTERPRETED"/>
     <frame method="sun.reflect.MethodAccessorGenerator#emitInvoke()V" modifier="private" line="720" type="INTERPRETED"/>
     <frame method="sun.reflect.MethodAccessorGenerator#generate(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;[Ljava/lang/Class;IZZLjava/lang/Class;)Lsun/reflect/MagicAccessorImpl;" modifier="private" line="380" type="INTERPRETED"/>
     <frame method="sun.reflect.MethodAccessorGenerator#generateMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;[Ljava/lang/Class;I)Lsun/reflect/MethodAccessor;" modifier="public" line="75" type="JIT_COMPILED"/>
     <frame method="sun.reflect.NativeMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="53" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="sun.reflect.misc.Trampoline#invoke(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="private static" line="71" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor1#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="sun.reflect.misc.MethodUtil#invoke(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public static" line="275" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.ConvertingMethod#invokeWithOpenReturn(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="private" line="193" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.ConvertingMethod#invokeWithOpenReturn(Lcom/sun/jmx/mbeanserver/MXBeanLookup;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="" line="175" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.MXBeanIntrospector#invokeM2(Lcom/sun/jmx/mbeanserver/ConvertingMethod;Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" modifier="" line="117" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.MXBeanIntrospector#invokeM2(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" modifier="volatile" line="54" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.MBeanIntrospector#invokeM(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" modifier="final" line="237" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.PerInterface#invoke(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" modifier="" line="138" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.MBeanSupport#invoke(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;" modifier="public final" line="252" type="INTERPRETED"/>
     <frame method="javax.management.StandardMBean#invoke(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;" modifier="public" line="405" type="INTERPRETED"/>
     <frame method="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor#invoke(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;" modifier="public" line="819" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.JmxMBeanServer#invoke(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;" modifier="public" line="801" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#doOperation(I[Ljava/lang/Object;)Ljava/lang/Object;" modifier="private" line="1471" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#access$300(Ljavax/management/remote/rmi/RMIConnectionImpl;I[Ljava/lang/Object;)Ljava/lang/Object;" modifier="static" line="76" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation#run()Ljava/lang/Object;" modifier="public" line="1312" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#doPrivilegedOperation(I[Ljava/lang/Object;Ljavax/security/auth/Subject;)Ljava/lang/Object;" modifier="private" line="1404" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#invoke(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/rmi/MarshalledObject;[Ljava/lang/String;Ljavax/security/auth/Subject;)Ljava/lang/Object;" modifier="public" line="832" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor19#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="323" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).byte[]</objectClass>
  <allocationSize name="Allocation Size">1616 B</allocationSize>
</event>
<event name="Allocation outside TLAB" path="jdk.ObjectAllocationOutsideTLAB">
  <(endTime) name="End Time">1524059135654919918 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="sun.reflect.ByteVectorImpl#trim()V" modifier="public" line="70" type="INTERPRETED"/>
     <frame method="sun.reflect.MethodAccessorGenerator#generate(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;[Ljava/lang/Class;IZZLjava/lang/Class;)Lsun/reflect/MagicAccessorImpl;" modifier="private" line="386" type="INTERPRETED"/>
     <frame method="sun.reflect.MethodAccessorGenerator#generateMethod(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;Ljava/lang/Class;[Ljava/lang/Class;I)Lsun/reflect/MethodAccessor;" modifier="public" line="75" type="JIT_COMPILED"/>
     <frame method="sun.reflect.NativeMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="53" type="JIT_COMPILED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="sun.reflect.misc.Trampoline#invoke(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="private static" line="71" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor1#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="sun.reflect.misc.MethodUtil#invoke(Ljava/lang/reflect/Method;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public static" line="275" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.ConvertingMethod#invokeWithOpenReturn(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="private" line="193" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.ConvertingMethod#invokeWithOpenReturn(Lcom/sun/jmx/mbeanserver/MXBeanLookup;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="" line="175" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.MXBeanIntrospector#invokeM2(Lcom/sun/jmx/mbeanserver/ConvertingMethod;Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" modifier="" line="117" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.MXBeanIntrospector#invokeM2(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" modifier="volatile" line="54" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.MBeanIntrospector#invokeM(Ljava/lang/Object;Ljava/lang/Object;[Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" modifier="final" line="237" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.PerInterface#invoke(Ljava/lang/Object;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;" modifier="" line="138" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.MBeanSupport#invoke(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;" modifier="public final" line="252" type="INTERPRETED"/>
     <frame method="javax.management.StandardMBean#invoke(Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;" modifier="public" line="405" type="INTERPRETED"/>
     <frame method="com.sun.jmx.interceptor.DefaultMBeanServerInterceptor#invoke(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;" modifier="public" line="819" type="INTERPRETED"/>
     <frame method="com.sun.jmx.mbeanserver.JmxMBeanServer#invoke(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;" modifier="public" line="801" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#doOperation(I[Ljava/lang/Object;)Ljava/lang/Object;" modifier="private" line="1471" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#access$300(Ljavax/management/remote/rmi/RMIConnectionImpl;I[Ljava/lang/Object;)Ljava/lang/Object;" modifier="static" line="76" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl$PrivilegedOperation#run()Ljava/lang/Object;" modifier="public" line="1312" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#doPrivilegedOperation(I[Ljava/lang/Object;Ljavax/security/auth/Subject;)Ljava/lang/Object;" modifier="private" line="1404" type="INTERPRETED"/>
     <frame method="javax.management.remote.rmi.RMIConnectionImpl#invoke(Ljavax/management/ObjectName;Ljava/lang/String;Ljava/rmi/MarshalledObject;[Ljava/lang/String;Ljavax/security/auth/Subject;)Ljava/lang/Object;" modifier="public" line="832" type="INTERPRETED"/>
     <frame method="sun.reflect.GeneratedMethodAccessor19#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="sun.reflect.DelegatingMethodAccessorImpl#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public" line="43" type="JIT_COMPILED"/>
     <frame method="java.lang.reflect.Method#invoke(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" modifier="public transient" line="497" type="JIT_COMPILED"/>
     <frame method="sun.rmi.server.UnicastServerRef#dispatch(Ljava/rmi/Remote;Ljava/rmi/server/RemoteCall;)V" modifier="public" line="323" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Void;" modifier="public" line="200" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport$1#run()Ljava/lang/Object;" modifier="public volatile" line="197" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedExceptionAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.Transport#serviceCall(Ljava/rmi/server/RemoteCall;)Z" modifier="public" line="196" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="568" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <objectClass name="Class">(default package).byte[]</objectClass>
  <allocationSize name="Allocation Size">872 B</allocationSize>
</event>
<event name="CPU Information" path="jdk.CPUInformation">
  <(endTime) name="End Time">1524059136043868830 epochns</(endTime)>
  <cpu name="Type">Intel (null) (HT) SSE SSE2 SSE3 SSSE3 SSE4.1 SSE4.2 Core Intel64</cpu>
  <description name="Description">Brand: Intel(R) Core(TM) i7-6660U CPU @ 2.40GHz, Vendor: GenuineIntel
Family: <unknown> (0x6), Model: <unknown> (0x4e), Stepping: 0x3
Ext. family: 0x0, Ext. model: 0x4, Type: 0x0, Signature: 0x000406e3
Features: ebx: 0x02100800, ecx: 0x7ffafbff, edx: 0xbfebfbff
Ext. features: eax: 0x00000000, ebx: 0x00000000, ecx: 0x00000121, edx: 0x2c100800
Supports: On-Chip FPU, Virtual Mode Extensions, Debugging Extensions, Page Size Extensions, Time Stamp Counter, Model Specific Registers, Physical Address Extension, Machine Check Exceptions, CMPXCHG8B Instruction, On-Chip APIC, Fast System Call, Memory Type Range Registers, Page Global Enable, Machine Check Architecture, Conditional Mov Instruction, Page Attribute Table, 36-bit Page Size Extension, CLFLUSH Instruction, Debug Trace Store feature, ACPI registers in MSR space, Intel Architecture MMX Technology, Fast Float Point Save and Restore, Streaming SIMD extensions, Streaming SIMD extensions 2, Self-Snoop, Hyper Threading, Thermal Monitor, Streaming SIMD Extensions 3, PCLMULQDQ, 64-bit DS Area, MONITOR/MWAIT instructions, CPL Qualified Debug Store, Virtual Machine Extensions, Safer Mode Extensions, Enhanced Intel SpeedStep technology, Thermal Monitor 2, Supplemental Streaming SIMD Extensions 3, Fused Multiply-Add, CMPXCHG16B, xTPR Update Control, Perfmon and Debug Capability, Process-context identifiers, Streaming SIMD extensions 4.1, Streaming SIMD extensions 4.2, x2APIC, MOVBE, Popcount instruction, TSC-Deadline, AESNI, XSAVE, OSXSAVE, AVX, F16C, LAHF/SAHF instruction support, Advanced Bit Manipulations: LZCNT, Prefetch and PrefetchW support, SYSCALL/SYSRET, Execute Disable Bit, RDTSCP, Intel 64 Architecture, Invariant TSC</description>
  <sockets name="Sockets">1</sockets>
  <cores name="Cores">2</cores>
  <hwThreads name="Hardware Threads">4</hwThreads>
</event>
<event name="CPU Load" path="jdk.CPULoad">
  <(endTime) name="End Time">1524059126498927190 epochns</(endTime)>
  <jvmUser name="JVM User">0.16907437145709991</jvmUser>
  <jvmSystem name="JVM System">0.009706075303256512</jvmSystem>
  <machineTotal name="Machine Total">0.6399999856948853</machineTotal>
</event>
<event name="CPU Load" path="jdk.CPULoad">
  <(endTime) name="End Time">1524059127904963004 epochns</(endTime)>
  <jvmUser name="JVM User">0.018571238964796066</jvmUser>
  <jvmSystem name="JVM System">0.001458817394450307</jvmSystem>
  <machineTotal name="Machine Total">0.19750890135765076</machineTotal>
</event>
<event name="CPU Load" path="jdk.CPULoad">
  <(endTime) name="End Time">1524059129007558045 epochns</(endTime)>
  <jvmUser name="JVM User">0.001522835693322122</jvmUser>
  <jvmSystem name="JVM System">1.9086292013525963E-4</jvmSystem>
  <machineTotal name="Machine Total">0.190476194024086</machineTotal>
</event>
<event name="CPU Load" path="jdk.CPULoad">
  <(endTime) name="End Time">1524059130109805792 epochns</(endTime)>
  <jvmUser name="JVM User">0.0018013272201642394</jvmUser>
  <jvmSystem name="JVM System">2.0782407955266535E-4</jvmSystem>
  <machineTotal name="Machine Total">0.4761904776096344</machineTotal>
</event>
<event name="CPU Load" path="jdk.CPULoad">
  <(endTime) name="End Time">1524059132139467971 epochns</(endTime)>
  <jvmUser name="JVM User">0.001231129514053464</jvmUser>
  <jvmSystem name="JVM System">1.6264441364910454E-4</jvmSystem>
  <machineTotal name="Machine Total">0.3325123190879822</machineTotal>
</event>
<event name="CPU Load" path="jdk.CPULoad">
  <(endTime) name="End Time">1524059133596802050 epochns</(endTime)>
  <jvmUser name="JVM User">0.006666862405836582</jvmUser>
  <jvmSystem name="JVM System">5.098875844851136E-4</jvmSystem>
  <machineTotal name="Machine Total">0.27147766947746277</machineTotal>
</event>
<event name="CPU Load" path="jdk.CPULoad">
  <(endTime) name="End Time">1524059134813278444 epochns</(endTime)>
  <jvmUser name="JVM User">0.001209680107422173</jvmUser>
  <jvmSystem name="JVM System">2.470881154295057E-4</jvmSystem>
  <machineTotal name="Machine Total">0.15195071697235107</machineTotal>
</event>
<event name="CPU Load" path="jdk.CPULoad">
  <(endTime) name="End Time">1524059136038005345 epochns</(endTime)>
  <jvmUser name="JVM User">6.579843466170132E-4</jvmUser>
  <jvmSystem name="JVM System">1.9720519776456058E-4</jvmSystem>
  <machineTotal name="Machine Total">0.12016293406486511</machineTotal>
</event>
<event name="CPU Time Stamp Counter" path="jdk.CPUTimeStampCounter">
  <(endTime) name="End Time">1524059136043907245 epochns</(endTime)>
  <fastTimeEnabled name="Fast Time">true</fastTimeEnabled>
  <fastTimeAutoEnabled name="Trusted Platform">true</fastTimeAutoEnabled>
  <osFrequency name="OS Frequency Per Second">1000000000</osFrequency>
  <fastTimeFrequency name="Fast Time Frequency per Second">2400000000</fastTimeFrequency>
</event>
<event name="Class Loading Statistics" path="jdk.ClassLoadingStatistics">
  <(endTime) name="End Time">1524059126498931524 epochns</(endTime)>
  <loadedClassCount name="Loaded Class Count">4205</loadedClassCount>
  <unloadedClassCount name="Unloaded Class Count">0</unloadedClassCount>
</event>
<event name="Class Loading Statistics" path="jdk.ClassLoadingStatistics">
  <(endTime) name="End Time">1524059127904967070 epochns</(endTime)>
  <loadedClassCount name="Loaded Class Count">4205</loadedClassCount>
  <unloadedClassCount name="Unloaded Class Count">0</unloadedClassCount>
</event>
<event name="Class Loading Statistics" path="jdk.ClassLoadingStatistics">
  <(endTime) name="End Time">1524059129007561146 epochns</(endTime)>
  <loadedClassCount name="Loaded Class Count">4205</loadedClassCount>
  <unloadedClassCount name="Unloaded Class Count">0</unloadedClassCount>
</event>
<event name="Class Loading Statistics" path="jdk.ClassLoadingStatistics">
  <(endTime) name="End Time">1524059130109809343 epochns</(endTime)>
  <loadedClassCount name="Loaded Class Count">4206</loadedClassCount>
  <unloadedClassCount name="Unloaded Class Count">0</unloadedClassCount>
</event>
<event name="Class Loading Statistics" path="jdk.ClassLoadingStatistics">
  <(endTime) name="End Time">1524059132139471299 epochns</(endTime)>
  <loadedClassCount name="Loaded Class Count">4206</loadedClassCount>
  <unloadedClassCount name="Unloaded Class Count">0</unloadedClassCount>
</event>
<event name="Class Loading Statistics" path="jdk.ClassLoadingStatistics">
  <(endTime) name="End Time">1524059133596805040 epochns</(endTime)>
  <loadedClassCount name="Loaded Class Count">4206</loadedClassCount>
  <unloadedClassCount name="Unloaded Class Count">0</unloadedClassCount>
</event>
<event name="Class Loading Statistics" path="jdk.ClassLoadingStatistics">
  <(endTime) name="End Time">1524059134813283105 epochns</(endTime)>
  <loadedClassCount name="Loaded Class Count">4206</loadedClassCount>
  <unloadedClassCount name="Unloaded Class Count">0</unloadedClassCount>
</event>
<event name="Class Loading Statistics" path="jdk.ClassLoadingStatistics">
  <(endTime) name="End Time">1524059136038013300 epochns</(endTime)>
  <loadedClassCount name="Loaded Class Count">4207</loadedClassCount>
  <unloadedClassCount name="Unloaded Class Count">0</unloadedClassCount>
</event>
<event name="Exception Statistics" path="jdk.ExceptionStatistics">
  <(endTime) name="End Time">1524059126494115791 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <throwables name="Exceptions Created">86</throwables>
</event>
<event name="Exception Statistics" path="jdk.ExceptionStatistics">
  <(endTime) name="End Time">1524059127494185137 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <throwables name="Exceptions Created">86</throwables>
</event>
<event name="Exception Statistics" path="jdk.ExceptionStatistics">
  <(endTime) name="End Time">1524059128494553190 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <throwables name="Exceptions Created">86</throwables>
</event>
<event name="Exception Statistics" path="jdk.ExceptionStatistics">
  <(endTime) name="End Time">1524059129494730330 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <throwables name="Exceptions Created">86</throwables>
</event>
<event name="Exception Statistics" path="jdk.ExceptionStatistics">
  <(endTime) name="End Time">1524059130494931305 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <throwables name="Exceptions Created">86</throwables>
</event>
<event name="Exception Statistics" path="jdk.ExceptionStatistics">
  <(endTime) name="End Time">1524059131495123230 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <throwables name="Exceptions Created">86</throwables>
</event>
<event name="Exception Statistics" path="jdk.ExceptionStatistics">
  <(endTime) name="End Time">1524059132495317588 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <throwables name="Exceptions Created">86</throwables>
</event>
<event name="Exception Statistics" path="jdk.ExceptionStatistics">
  <(endTime) name="End Time">1524059133495465983 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <throwables name="Exceptions Created">86</throwables>
</event>
<event name="Exception Statistics" path="jdk.ExceptionStatistics">
  <(endTime) name="End Time">1524059134495767875 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <throwables name="Exceptions Created">86</throwables>
</event>
<event name="Exception Statistics" path="jdk.ExceptionStatistics">
  <(endTime) name="End Time">1524059135495046267 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <throwables name="Exceptions Created">86</throwables>
</event>
<event name="Flight Recording" path="jdk.ActiveRecording">
  <(endTime) name="End Time">1524059125515482840 epochns</(endTime)>
  <compress name="Compress Recording File">false</compress>
  <recordingStart name="Recording Start">1524059125506 epochms</recordingStart>
  <maxSize name="Max Size">0 B</maxSize>
  <maxAge name="Max Age">0 ms</maxAge>
  <recordingDuration name="Recording Duration">10000 ms</recordingDuration>
  <destination name="Destination">recording.jfr</destination>
  <name name="Name">My Recording</name>
  <id name="Id">1</id>
</event>
<event name="JVM Information" path="jdk.JVMInformation">
  <(endTime) name="End Time">1524059136042199565 epochns</(endTime)>
  <jvmName name="JVM Name">Java HotSpot(TM) 64-Bit Server VM</jvmName>
  <jvmVersion name="JVM Version">Java HotSpot(TM) 64-Bit Server VM (25.60-b24) for bsd-amd64 JRE (1.8.0_60-b32), built on Sep 18 2015 16:32:18 by "java_re" with gcc 4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2336.11.00)</jvmVersion>
  <jvmArguments name="JVM Command Line Arguments">-Dapplication.home=/opt/jvm/jdk1.8.0_60.jdk/Contents/Home -Xms8m -Djconsole.showOutputViewer</jvmArguments>
  <jvmFlags name="JVM Settings File Arguments"></jvmFlags>
  <javaArguments name="Java Application Arguments">sun.tools.jconsole.JConsole</javaArguments>
  <jvmStartTime name="JVM Start Time">1524058990324 epochms</jvmStartTime>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059125499580536 epochns</startTime>
  <(endTime) name="End Time">1524059126493698078 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.util.TimerThread#mainLoop()V" modifier="private" line="552" type="INTERPRETED"/>
     <frame method="java.util.TimerThread#run()V" modifier="public" line="505" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.util.TaskQueue</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">994 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211820783392</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059125514858172 epochns</startTime>
  <(endTime) name="End Time">1524059125614876570 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059125614916315 epochns</startTime>
  <(endTime) name="End Time">1524059125814591925 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059125814640372 epochns</startTime>
  <(endTime) name="End Time">1524059125914706282 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059125914751959 epochns</startTime>
  <(endTime) name="End Time">1524059126014807149 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059126014831839 epochns</startTime>
  <(endTime) name="End Time">1524059126115364115 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059126115387197 epochns</startTime>
  <(endTime) name="End Time">1524059126215416111 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059126215452423 epochns</startTime>
  <(endTime) name="End Time">1524059126315478078 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059126314240525 epochns</startTime>
  <(endTime) name="End Time">1524059127314431260 epochns</(endTime)>
  <eventThread name="Thread">Thread-1</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">null</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818835984</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059126314250124 epochns</startTime>
  <(endTime) name="End Time">1524059127314451555 epochns</(endTime)>
  <eventThread name="Thread">Thread-0</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818830352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059126315502373 epochns</startTime>
  <(endTime) name="End Time">1524059126416145432 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059126416168455 epochns</startTime>
  <(endTime) name="End Time">1524059126516231952 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059126497781440 epochns</startTime>
  <(endTime) name="End Time">1524059127494132809 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.util.TimerThread#mainLoop()V" modifier="private" line="552" type="INTERPRETED"/>
     <frame method="java.util.TimerThread#run()V" modifier="public" line="505" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.util.TaskQueue</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">996 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211820783392</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059126516268445 epochns</startTime>
  <(endTime) name="End Time">1524059126616287433 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059126616310570 epochns</startTime>
  <(endTime) name="End Time">1524059126716336815 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059126716367711 epochns</startTime>
  <(endTime) name="End Time">1524059126816571586 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059126816606148 epochns</startTime>
  <(endTime) name="End Time">1524059127904984940 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059127314471698 epochns</startTime>
  <(endTime) name="End Time">1524059128314696343 epochns</(endTime)>
  <eventThread name="Thread">Thread-0</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818830352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059127314471711 epochns</startTime>
  <(endTime) name="End Time">1524059128314719723 epochns</(endTime)>
  <eventThread name="Thread">Thread-1</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">null</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818835984</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059127494209855 epochns</startTime>
  <(endTime) name="End Time">1524059128494487160 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.util.TimerThread#mainLoop()V" modifier="private" line="552" type="INTERPRETED"/>
     <frame method="java.util.TimerThread#run()V" modifier="public" line="505" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.util.TaskQueue</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211820783392</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059127905009704 epochns</startTime>
  <(endTime) name="End Time">1524059128005033068 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059128005058105 epochns</startTime>
  <(endTime) name="End Time">1524059128105101146 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059128105131712 epochns</startTime>
  <(endTime) name="End Time">1524059128252188263 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059128252215753 epochns</startTime>
  <(endTime) name="End Time">1524059129007574563 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059128314726388 epochns</startTime>
  <(endTime) name="End Time">1524059129314804805 epochns</(endTime)>
  <eventThread name="Thread">Thread-0</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818830352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059128314736003 epochns</startTime>
  <(endTime) name="End Time">1524059129314816994 epochns</(endTime)>
  <eventThread name="Thread">Thread-1</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">null</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818835984</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059128494582022 epochns</startTime>
  <(endTime) name="End Time">1524059129494677508 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.util.TimerThread#mainLoop()V" modifier="private" line="552" type="INTERPRETED"/>
     <frame method="java.util.TimerThread#run()V" modifier="public" line="505" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.util.TaskQueue</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211820783392</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059129007605950 epochns</startTime>
  <(endTime) name="End Time">1524059129856321980 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059129314842717 epochns</startTime>
  <(endTime) name="End Time">1524059130314886378 epochns</(endTime)>
  <eventThread name="Thread">Thread-1</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">null</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818835984</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059129314842760 epochns</startTime>
  <(endTime) name="End Time">1524059130314917383 epochns</(endTime)>
  <eventThread name="Thread">Thread-0</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818830352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059129494760115 epochns</startTime>
  <(endTime) name="End Time">1524059130494839875 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.util.TimerThread#mainLoop()V" modifier="private" line="552" type="INTERPRETED"/>
     <frame method="java.util.TimerThread#run()V" modifier="public" line="505" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.util.TaskQueue</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211820783392</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059129856349180 epochns</startTime>
  <(endTime) name="End Time">1524059130110420615 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059130110659385 epochns</startTime>
  <(endTime) name="End Time">1524059130210738980 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059130210764091 epochns</startTime>
  <(endTime) name="End Time">1524059130643862988 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059130314939178 epochns</startTime>
  <(endTime) name="End Time">1524059131314992717 epochns</(endTime)>
  <eventThread name="Thread">Thread-0</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818830352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059130314939225 epochns</startTime>
  <(endTime) name="End Time">1524059131314965704 epochns</(endTime)>
  <eventThread name="Thread">Thread-1</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">null</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818835984</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059130494966030 epochns</startTime>
  <(endTime) name="End Time">1524059131495051282 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.util.TimerThread#mainLoop()V" modifier="private" line="552" type="INTERPRETED"/>
     <frame method="java.util.TimerThread#run()V" modifier="public" line="505" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.util.TaskQueue</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211820783392</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059130643887060 epochns</startTime>
  <(endTime) name="End Time">1524059130743976304 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059130744015563 epochns</startTime>
  <(endTime) name="End Time">1524059130926607464 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059130926630086 epochns</startTime>
  <(endTime) name="End Time">1524059132139502639 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059131314992305 epochns</startTime>
  <(endTime) name="End Time">1524059132315413470 epochns</(endTime)>
  <eventThread name="Thread">Thread-1</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">null</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818835984</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059131315007810 epochns</startTime>
  <(endTime) name="End Time">1524059132315460539 epochns</(endTime)>
  <eventThread name="Thread">Thread-0</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818830352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059131495142976 epochns</startTime>
  <(endTime) name="End Time">1524059132495243601 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.util.TimerThread#mainLoop()V" modifier="private" line="552" type="INTERPRETED"/>
     <frame method="java.util.TimerThread#run()V" modifier="public" line="505" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.util.TaskQueue</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211820783392</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059132139524484 epochns</startTime>
  <(endTime) name="End Time">1524059132241069542 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059132241097767 epochns</startTime>
  <(endTime) name="End Time">1524059132341174722 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059132315441465 epochns</startTime>
  <(endTime) name="End Time">1524059133315552874 epochns</(endTime)>
  <eventThread name="Thread">Thread-1</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">null</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818835984</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059132315493382 epochns</startTime>
  <(endTime) name="End Time">1524059133315577519 epochns</(endTime)>
  <eventThread name="Thread">Thread-0</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818830352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059132341202475 epochns</startTime>
  <(endTime) name="End Time">1524059132441251572 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059132441301730 epochns</startTime>
  <(endTime) name="End Time">1524059132541338071 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059132495371331 epochns</startTime>
  <(endTime) name="End Time">1524059133495404869 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.util.TimerThread#mainLoop()V" modifier="private" line="552" type="INTERPRETED"/>
     <frame method="java.util.TimerThread#run()V" modifier="public" line="505" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.util.TaskQueue</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211820783392</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059132541360605 epochns</startTime>
  <(endTime) name="End Time">1524059133596820993 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059133315580308 epochns</startTime>
  <(endTime) name="End Time">1524059134315603388 epochns</(endTime)>
  <eventThread name="Thread">Thread-1</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">null</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818835984</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059133315592875 epochns</startTime>
  <(endTime) name="End Time">1524059134315606126 epochns</(endTime)>
  <eventThread name="Thread">Thread-0</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818830352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059133495499001 epochns</startTime>
  <(endTime) name="End Time">1524059134495704813 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.util.TimerThread#mainLoop()V" modifier="private" line="552" type="INTERPRETED"/>
     <frame method="java.util.TimerThread#run()V" modifier="public" line="505" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.util.TaskQueue</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211820783392</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059133596858525 epochns</startTime>
  <(endTime) name="End Time">1524059133702102733 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059133702238628 epochns</startTime>
  <(endTime) name="End Time">1524059133802451216 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059133802482934 epochns</startTime>
  <(endTime) name="End Time">1524059134813295694 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059134315629433 epochns</startTime>
  <(endTime) name="End Time">1524059135315823517 epochns</(endTime)>
  <eventThread name="Thread">Thread-1</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">null</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818835984</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059134315629442 epochns</startTime>
  <(endTime) name="End Time">1524059135315844341 epochns</(endTime)>
  <eventThread name="Thread">Thread-0</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.io.PipedInputStream#read()I" modifier="public synchronized" line="326" type="INTERPRETED"/>
     <frame method="java.io.PipedInputStream#read([BII)I" modifier="public synchronized" line="377" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#readBytes()I" modifier="private" line="284" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#implRead([CII)I" modifier="" line="326" type="INTERPRETED"/>
     <frame method="sun.nio.cs.StreamDecoder#read([CII)I" modifier="public" line="178" type="INTERPRETED"/>
     <frame method="java.io.InputStreamReader#read([CII)I" modifier="public" line="184" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#fill()V" modifier="private" line="161" type="INTERPRETED"/>
     <frame method="java.io.BufferedReader#readLine(Z)Ljava/lang/String;" modifier="" line="324" type="JIT_COMPILED"/>
     <frame method="java.io.BufferedReader#readLine()Ljava/lang/String;" modifier="public" line="389" type="JIT_COMPILED"/>
     <frame method="sun.tools.jconsole.OutputViewer$PipeListener#run()V" modifier="public" line="109" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.io.PipedInputStream</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">1000 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211818830352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059134495800425 epochns</startTime>
  <(endTime) name="End Time">1524059135494945500 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.util.TimerThread#mainLoop()V" modifier="private" line="552" type="INTERPRETED"/>
     <frame method="java.util.TimerThread#run()V" modifier="public" line="505" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.util.TaskQueue</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">999 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211820783392</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059134813326762 epochns</startTime>
  <(endTime) name="End Time">1524059134913597844 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059134913633998 epochns</startTime>
  <(endTime) name="End Time">1524059135013692326 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059135013717417 epochns</startTime>
  <(endTime) name="End Time">1524059135113916550 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059135113945340 epochns</startTime>
  <(endTime) name="End Time">1524059136037992548 epochns</(endTime)>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.java2d.opengl.OGLRenderQueue$QueueFlusher#run()V" modifier="public synchronized" line="203" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">sun.java2d.opengl.OGLRenderQueue$QueueFlusher</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">100 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211807936352</address>
</event>
<event name="Java Monitor Wait" path="jdk.JavaMonitorWait">
  <startTime name="Start Time">1524059135495253390 epochns</startTime>
  <(endTime) name="End Time">1524059136038025108 epochns</(endTime)>
  <eventThread name="Thread">JFR request timer</eventThread>
  <stackTrace>
     <frame method="java.lang.Object#wait(J)V" modifier="public final native" line="-1" type="JIT_COMPILED"/>
     <frame method="java.util.TimerThread#mainLoop()V" modifier="private" line="552" type="INTERPRETED"/>
     <frame method="java.util.TimerThread#run()V" modifier="public" line="505" type="INTERPRETED"/>
  </stackTrace>
  <monitorClass name="Monitor Class">java.util.TaskQueue</monitorClass>
  <notifier name="Notifier Thread">Unknown Thread Name</notifier>
  <timeout name="Timeout">11 ms</timeout>
  <timedOut name="Timed Out">true</timedOut>
  <address name="Monitor Address">140211820783392</address>
</event>
<event name="Java Thread Statistics" path="jdk.JavaThreadStatistics">
  <(endTime) name="End Time">1524059126498930678 epochns</(endTime)>
  <activeCount name="Active Threads">20</activeCount>
  <daemonCount name="Daemon Threads">15</daemonCount>
  <accumulatedCount name="Accumulated Threads">25</accumulatedCount>
  <peakCount name="Peak Threads">21</peakCount>
</event>
<event name="Java Thread Statistics" path="jdk.JavaThreadStatistics">
  <(endTime) name="End Time">1524059127904965886 epochns</(endTime)>
  <activeCount name="Active Threads">20</activeCount>
  <daemonCount name="Daemon Threads">15</daemonCount>
  <accumulatedCount name="Accumulated Threads">25</accumulatedCount>
  <peakCount name="Peak Threads">21</peakCount>
</event>
<event name="Java Thread Statistics" path="jdk.JavaThreadStatistics">
  <(endTime) name="End Time">1524059129007560084 epochns</(endTime)>
  <activeCount name="Active Threads">20</activeCount>
  <daemonCount name="Daemon Threads">15</daemonCount>
  <accumulatedCount name="Accumulated Threads">25</accumulatedCount>
  <peakCount name="Peak Threads">21</peakCount>
</event>
<event name="Java Thread Statistics" path="jdk.JavaThreadStatistics">
  <(endTime) name="End Time">1524059130109808093 epochns</(endTime)>
  <activeCount name="Active Threads">20</activeCount>
  <daemonCount name="Daemon Threads">15</daemonCount>
  <accumulatedCount name="Accumulated Threads">25</accumulatedCount>
  <peakCount name="Peak Threads">21</peakCount>
</event>
<event name="Java Thread Statistics" path="jdk.JavaThreadStatistics">
  <(endTime) name="End Time">1524059132139470270 epochns</(endTime)>
  <activeCount name="Active Threads">20</activeCount>
  <daemonCount name="Daemon Threads">15</daemonCount>
  <accumulatedCount name="Accumulated Threads">25</accumulatedCount>
  <peakCount name="Peak Threads">21</peakCount>
</event>
<event name="Java Thread Statistics" path="jdk.JavaThreadStatistics">
  <(endTime) name="End Time">1524059133596804110 epochns</(endTime)>
  <activeCount name="Active Threads">20</activeCount>
  <daemonCount name="Daemon Threads">15</daemonCount>
  <accumulatedCount name="Accumulated Threads">25</accumulatedCount>
  <peakCount name="Peak Threads">21</peakCount>
</event>
<event name="Java Thread Statistics" path="jdk.JavaThreadStatistics">
  <(endTime) name="End Time">1524059134813281886 epochns</(endTime)>
  <activeCount name="Active Threads">20</activeCount>
  <daemonCount name="Daemon Threads">15</daemonCount>
  <accumulatedCount name="Accumulated Threads">25</accumulatedCount>
  <peakCount name="Peak Threads">21</peakCount>
</event>
<event name="Java Thread Statistics" path="jdk.JavaThreadStatistics">
  <(endTime) name="End Time">1524059136038012355 epochns</(endTime)>
  <activeCount name="Active Threads">20</activeCount>
  <daemonCount name="Daemon Threads">15</daemonCount>
  <accumulatedCount name="Accumulated Threads">25</accumulatedCount>
  <peakCount name="Peak Threads">21</peakCount>
</event>
<event name="OS Information" path="jdk.OSInformation">
  <(endTime) name="End Time">1524059136043863884 epochns</(endTime)>
  <osVersion name="OS Version">Bsduname:Darwin 16.7.0 Darwin Kernel Version 16.7.0: Thu Jun 15 17:36:27 PDT 2017; root:xnu-3789.70.16~2/RELEASE_X86_64 x86_64
</osVersion>
</event>
<event name="Physical Memory" path="jdk.PhysicalMemory">
  <(endTime) name="End Time">1524059125515085521 epochns</(endTime)>
  <totalSize name="Total Size">17179869184 B</totalSize>
  <usedSize name="Used Size">17071349760 B</usedSize>
</event>
<event name="Physical Memory" path="jdk.PhysicalMemory">
  <(endTime) name="End Time">1524059136042196050 epochns</(endTime)>
  <totalSize name="Total Size">17179869184 B</totalSize>
  <usedSize name="Used Size">17154818048 B</usedSize>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125536501796 epochns</(endTime)>
  <settingFor name="Setting For">Flight Recording</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125536501796 epochns</(endTime)>
  <settingFor name="Setting For">Flight Recording</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125536501796 epochns</(endTime)>
  <settingFor name="Setting For">Flight Recording</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125536812271 epochns</(endTime)>
  <settingFor name="Setting For">Recording Setting</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125536812271 epochns</(endTime)>
  <settingFor name="Setting For">Recording Setting</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125536812271 epochns</(endTime)>
  <settingFor name="Setting For">Recording Setting</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125536895690 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Start</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125536895690 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Start</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125536895690 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Start</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125536965199 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread End</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125536965199 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread End</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125536965199 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread End</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537048208 epochns</(endTime)>
  <settingFor name="Setting For">Java Exception</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537048208 epochns</(endTime)>
  <settingFor name="Setting For">Java Exception</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537048208 epochns</(endTime)>
  <settingFor name="Setting For">Java Exception</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537140445 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Sleep</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537140445 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Sleep</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537140445 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Sleep</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537140445 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Sleep</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">10000000 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537226836 epochns</(endTime)>
  <settingFor name="Setting For">Java Error</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537226836 epochns</(endTime)>
  <settingFor name="Setting For">Java Error</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537226836 epochns</(endTime)>
  <settingFor name="Setting For">Java Error</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537332966 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Park</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537332966 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Park</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537332966 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Park</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537332966 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Park</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">10000000 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537422153 epochns</(endTime)>
  <settingFor name="Setting For">Exception Statistics</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537422153 epochns</(endTime)>
  <settingFor name="Setting For">Exception Statistics</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">1000 ms</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537422153 epochns</(endTime)>
  <settingFor name="Setting For">Exception Statistics</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537524097 epochns</(endTime)>
  <settingFor name="Setting For">Java Monitor Blocked</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537524097 epochns</(endTime)>
  <settingFor name="Setting For">Java Monitor Blocked</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537524097 epochns</(endTime)>
  <settingFor name="Setting For">Java Monitor Blocked</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537524097 epochns</(endTime)>
  <settingFor name="Setting For">Java Monitor Blocked</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">10000000 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537614155 epochns</(endTime)>
  <settingFor name="Setting For">Socket Read</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537614155 epochns</(endTime)>
  <settingFor name="Setting For">Socket Read</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537614155 epochns</(endTime)>
  <settingFor name="Setting For">Socket Read</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537614155 epochns</(endTime)>
  <settingFor name="Setting For">Socket Read</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">10000000 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537842885 epochns</(endTime)>
  <settingFor name="Setting For">Java Monitor Wait</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537842885 epochns</(endTime)>
  <settingFor name="Setting For">Java Monitor Wait</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537842885 epochns</(endTime)>
  <settingFor name="Setting For">Java Monitor Wait</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537842885 epochns</(endTime)>
  <settingFor name="Setting For">Java Monitor Wait</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">10000000 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537930362 epochns</(endTime)>
  <settingFor name="Setting For">Socket Write</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537930362 epochns</(endTime)>
  <settingFor name="Setting For">Socket Write</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537930362 epochns</(endTime)>
  <settingFor name="Setting For">Socket Write</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125537930362 epochns</(endTime)>
  <settingFor name="Setting For">Socket Write</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">10000000 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538013248 epochns</(endTime)>
  <settingFor name="Setting For">Class Load</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538013248 epochns</(endTime)>
  <settingFor name="Setting For">Class Load</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538013248 epochns</(endTime)>
  <settingFor name="Setting For">Class Load</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538013248 epochns</(endTime)>
  <settingFor name="Setting For">Class Load</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">0 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538083122 epochns</(endTime)>
  <settingFor name="Setting For">File Read</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538083122 epochns</(endTime)>
  <settingFor name="Setting For">File Read</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538083122 epochns</(endTime)>
  <settingFor name="Setting For">File Read</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538083122 epochns</(endTime)>
  <settingFor name="Setting For">File Read</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">10000000 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538362153 epochns</(endTime)>
  <settingFor name="Setting For">Class Unload</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538362153 epochns</(endTime)>
  <settingFor name="Setting For">Class Unload</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538362153 epochns</(endTime)>
  <settingFor name="Setting For">Class Unload</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538435342 epochns</(endTime)>
  <settingFor name="Setting For">File Write</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538435342 epochns</(endTime)>
  <settingFor name="Setting For">File Write</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538435342 epochns</(endTime)>
  <settingFor name="Setting For">File Write</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538435342 epochns</(endTime)>
  <settingFor name="Setting For">File Write</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">10000000 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538498050 epochns</(endTime)>
  <settingFor name="Setting For">Long Flag Changed</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538498050 epochns</(endTime)>
  <settingFor name="Setting For">Long Flag Changed</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538498050 epochns</(endTime)>
  <settingFor name="Setting For">Long Flag Changed</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538578537 epochns</(endTime)>
  <settingFor name="Setting For">Unsigned Long Flag Changed</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538578537 epochns</(endTime)>
  <settingFor name="Setting For">Unsigned Long Flag Changed</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538578537 epochns</(endTime)>
  <settingFor name="Setting For">Unsigned Long Flag Changed</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538872758 epochns</(endTime)>
  <settingFor name="Setting For">Double Flag Changed</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538872758 epochns</(endTime)>
  <settingFor name="Setting For">Double Flag Changed</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538872758 epochns</(endTime)>
  <settingFor name="Setting For">Double Flag Changed</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538938887 epochns</(endTime)>
  <settingFor name="Setting For">Boolean Flag Changed</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538938887 epochns</(endTime)>
  <settingFor name="Setting For">Boolean Flag Changed</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538938887 epochns</(endTime)>
  <settingFor name="Setting For">Boolean Flag Changed</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538989211 epochns</(endTime)>
  <settingFor name="Setting For">String Flag Changed</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538989211 epochns</(endTime)>
  <settingFor name="Setting For">String Flag Changed</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125538989211 epochns</(endTime)>
  <settingFor name="Setting For">String Flag Changed</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539039355 epochns</(endTime)>
  <settingFor name="Setting For">Heap Summary</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539039355 epochns</(endTime)>
  <settingFor name="Setting For">Heap Summary</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539039355 epochns</(endTime)>
  <settingFor name="Setting For">Heap Summary</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539080146 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace Summary</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539080146 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace Summary</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539080146 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace Summary</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539127720 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace GC Threshold</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539127720 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace GC Threshold</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539127720 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace GC Threshold</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539278704 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace Allocation Failure</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539278704 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace Allocation Failure</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539278704 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace Allocation Failure</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539326108 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace Out of Memory</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539326108 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace Out of Memory</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539326108 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace Out of Memory</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539368418 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace Chunk Free List Summary</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539368418 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace Chunk Free List Summary</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539368418 epochns</(endTime)>
  <settingFor name="Setting For">Metaspace Chunk Free List Summary</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539646776 epochns</(endTime)>
  <settingFor name="Setting For">Parallel Scavenge Heap Summary</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539646776 epochns</(endTime)>
  <settingFor name="Setting For">Parallel Scavenge Heap Summary</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539646776 epochns</(endTime)>
  <settingFor name="Setting For">Parallel Scavenge Heap Summary</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539712709 epochns</(endTime)>
  <settingFor name="Setting For">Garbage Collection</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539712709 epochns</(endTime)>
  <settingFor name="Setting For">Garbage Collection</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539712709 epochns</(endTime)>
  <settingFor name="Setting For">Garbage Collection</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539712709 epochns</(endTime)>
  <settingFor name="Setting For">Garbage Collection</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">0 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539741508 epochns</(endTime)>
  <settingFor name="Setting For">Parallel Old Garbage Collection</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539741508 epochns</(endTime)>
  <settingFor name="Setting For">Parallel Old Garbage Collection</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539741508 epochns</(endTime)>
  <settingFor name="Setting For">Parallel Old Garbage Collection</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125539741508 epochns</(endTime)>
  <settingFor name="Setting For">Parallel Old Garbage Collection</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">0 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125541000579 epochns</(endTime)>
  <settingFor name="Setting For">Young Garbage Collection</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125541000579 epochns</(endTime)>
  <settingFor name="Setting For">Young Garbage Collection</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125541000579 epochns</(endTime)>
  <settingFor name="Setting For">Young Garbage Collection</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125541000579 epochns</(endTime)>
  <settingFor name="Setting For">Young Garbage Collection</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">0 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125541060540 epochns</(endTime)>
  <settingFor name="Setting For">Old Garbage Collection</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125541060540 epochns</(endTime)>
  <settingFor name="Setting For">Old Garbage Collection</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125541060540 epochns</(endTime)>
  <settingFor name="Setting For">Old Garbage Collection</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125541060540 epochns</(endTime)>
  <settingFor name="Setting For">Old Garbage Collection</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">0 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550132352 epochns</(endTime)>
  <settingFor name="Setting For">G1 Garbage Collection</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550132352 epochns</(endTime)>
  <settingFor name="Setting For">G1 Garbage Collection</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550132352 epochns</(endTime)>
  <settingFor name="Setting For">G1 Garbage Collection</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550132352 epochns</(endTime)>
  <settingFor name="Setting For">G1 Garbage Collection</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">0 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550160441 epochns</(endTime)>
  <settingFor name="Setting For">Evacuation Information</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550160441 epochns</(endTime)>
  <settingFor name="Setting For">Evacuation Information</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550160441 epochns</(endTime)>
  <settingFor name="Setting For">Evacuation Information</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550179611 epochns</(endTime)>
  <settingFor name="Setting For">GC Reference Statistics</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550179611 epochns</(endTime)>
  <settingFor name="Setting For">GC Reference Statistics</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550179611 epochns</(endTime)>
  <settingFor name="Setting For">GC Reference Statistics</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550205141 epochns</(endTime)>
  <settingFor name="Setting For">Object Count after GC</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550205141 epochns</(endTime)>
  <settingFor name="Setting For">Object Count after GC</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550205141 epochns</(endTime)>
  <settingFor name="Setting For">Object Count after GC</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550223271 epochns</(endTime)>
  <settingFor name="Setting For">Promotion Failed</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550223271 epochns</(endTime)>
  <settingFor name="Setting For">Promotion Failed</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550223271 epochns</(endTime)>
  <settingFor name="Setting For">Promotion Failed</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550240007 epochns</(endTime)>
  <settingFor name="Setting For">Evacuation Failed</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550240007 epochns</(endTime)>
  <settingFor name="Setting For">Evacuation Failed</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550240007 epochns</(endTime)>
  <settingFor name="Setting For">Evacuation Failed</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550258590 epochns</(endTime)>
  <settingFor name="Setting For">Concurrent Mode Failure</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550258590 epochns</(endTime)>
  <settingFor name="Setting For">Concurrent Mode Failure</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550258590 epochns</(endTime)>
  <settingFor name="Setting For">Concurrent Mode Failure</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550278653 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550278653 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550278653 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125550278653 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">0 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552137688 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause Level 1</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552137688 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause Level 1</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552137688 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause Level 1</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552137688 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause Level 1</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">0 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552165178 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause Level 2</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552165178 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause Level 2</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552165178 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause Level 2</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552165178 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause Level 2</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">0 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552186871 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause Level 3</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552186871 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause Level 3</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552186871 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause Level 3</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552186871 epochns</(endTime)>
  <settingFor name="Setting For">GC Phase Pause Level 3</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">0 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552213118 epochns</(endTime)>
  <settingFor name="Setting For">Allocation Requiring GC</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552213118 epochns</(endTime)>
  <settingFor name="Setting For">Allocation Requiring GC</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552213118 epochns</(endTime)>
  <settingFor name="Setting For">Allocation Requiring GC</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552231676 epochns</(endTime)>
  <settingFor name="Setting For">Compilation</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552231676 epochns</(endTime)>
  <settingFor name="Setting For">Compilation</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552231676 epochns</(endTime)>
  <settingFor name="Setting For">Compilation</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552231676 epochns</(endTime)>
  <settingFor name="Setting For">Compilation</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">100000000 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552250238 epochns</(endTime)>
  <settingFor name="Setting For">Compiler Phase</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552250238 epochns</(endTime)>
  <settingFor name="Setting For">Compiler Phase</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552250238 epochns</(endTime)>
  <settingFor name="Setting For">Compiler Phase</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552250238 epochns</(endTime)>
  <settingFor name="Setting For">Compiler Phase</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">10000000000 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552269135 epochns</(endTime)>
  <settingFor name="Setting For">Compilation Failure</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552269135 epochns</(endTime)>
  <settingFor name="Setting For">Compilation Failure</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552269135 epochns</(endTime)>
  <settingFor name="Setting For">Compilation Failure</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552285153 epochns</(endTime)>
  <settingFor name="Setting For">Sweep Code Cache</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552285153 epochns</(endTime)>
  <settingFor name="Setting For">Sweep Code Cache</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552285153 epochns</(endTime)>
  <settingFor name="Setting For">Sweep Code Cache</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552285153 epochns</(endTime)>
  <settingFor name="Setting For">Sweep Code Cache</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">100000000 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552305321 epochns</(endTime)>
  <settingFor name="Setting For">Code Cache Full</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552305321 epochns</(endTime)>
  <settingFor name="Setting For">Code Cache Full</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552305321 epochns</(endTime)>
  <settingFor name="Setting For">Code Cache Full</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552322607 epochns</(endTime)>
  <settingFor name="Setting For">VM Operation</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552322607 epochns</(endTime)>
  <settingFor name="Setting For">VM Operation</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552322607 epochns</(endTime)>
  <settingFor name="Setting For">VM Operation</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552322607 epochns</(endTime)>
  <settingFor name="Setting For">VM Operation</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">10000000 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552341092 epochns</(endTime)>
  <settingFor name="Setting For">Allocation in new TLAB</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552341092 epochns</(endTime)>
  <settingFor name="Setting For">Allocation in new TLAB</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552341092 epochns</(endTime)>
  <settingFor name="Setting For">Allocation in new TLAB</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552360225 epochns</(endTime)>
  <settingFor name="Setting For">Allocation outside TLAB</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552360225 epochns</(endTime)>
  <settingFor name="Setting For">Allocation outside TLAB</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552360225 epochns</(endTime)>
  <settingFor name="Setting For">Allocation outside TLAB</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552377826 epochns</(endTime)>
  <settingFor name="Setting For">JVM Information</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552377826 epochns</(endTime)>
  <settingFor name="Setting For">JVM Information</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552377826 epochns</(endTime)>
  <settingFor name="Setting For">JVM Information</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552393664 epochns</(endTime)>
  <settingFor name="Setting For">OS Information</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552393664 epochns</(endTime)>
  <settingFor name="Setting For">OS Information</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552393664 epochns</(endTime)>
  <settingFor name="Setting For">OS Information</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552409917 epochns</(endTime)>
  <settingFor name="Setting For">Initial System Property</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552409917 epochns</(endTime)>
  <settingFor name="Setting For">Initial System Property</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552409917 epochns</(endTime)>
  <settingFor name="Setting For">Initial System Property</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552428393 epochns</(endTime)>
  <settingFor name="Setting For">Initial Environment Variable</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552428393 epochns</(endTime)>
  <settingFor name="Setting For">Initial Environment Variable</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552428393 epochns</(endTime)>
  <settingFor name="Setting For">Initial Environment Variable</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552447385 epochns</(endTime)>
  <settingFor name="Setting For">System Process</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552447385 epochns</(endTime)>
  <settingFor name="Setting For">System Process</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552447385 epochns</(endTime)>
  <settingFor name="Setting For">System Process</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552464780 epochns</(endTime)>
  <settingFor name="Setting For">CPU Information</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552464780 epochns</(endTime)>
  <settingFor name="Setting For">CPU Information</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552464780 epochns</(endTime)>
  <settingFor name="Setting For">CPU Information</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552482200 epochns</(endTime)>
  <settingFor name="Setting For">CPU Time Stamp Counter</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552482200 epochns</(endTime)>
  <settingFor name="Setting For">CPU Time Stamp Counter</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552482200 epochns</(endTime)>
  <settingFor name="Setting For">CPU Time Stamp Counter</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552502693 epochns</(endTime)>
  <settingFor name="Setting For">CPU Load</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552502693 epochns</(endTime)>
  <settingFor name="Setting For">CPU Load</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">1000 ms</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552502693 epochns</(endTime)>
  <settingFor name="Setting For">CPU Load</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552522829 epochns</(endTime)>
  <settingFor name="Setting For">Thread Context Switch Rate</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552522829 epochns</(endTime)>
  <settingFor name="Setting For">Thread Context Switch Rate</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">10000 ms</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552522829 epochns</(endTime)>
  <settingFor name="Setting For">Thread Context Switch Rate</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552543658 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Statistics</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552543658 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Statistics</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">1000 ms</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552543658 epochns</(endTime)>
  <settingFor name="Setting For">Java Thread Statistics</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552567185 epochns</(endTime)>
  <settingFor name="Setting For">Class Loading Statistics</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552567185 epochns</(endTime)>
  <settingFor name="Setting For">Class Loading Statistics</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">1000 ms</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552567185 epochns</(endTime)>
  <settingFor name="Setting For">Class Loading Statistics</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552585947 epochns</(endTime)>
  <settingFor name="Setting For">Thread Allocation Statistics</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552585947 epochns</(endTime)>
  <settingFor name="Setting For">Thread Allocation Statistics</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552585947 epochns</(endTime)>
  <settingFor name="Setting For">Thread Allocation Statistics</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552605095 epochns</(endTime)>
  <settingFor name="Setting For">Physical Memory</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552605095 epochns</(endTime)>
  <settingFor name="Setting For">Physical Memory</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552605095 epochns</(endTime)>
  <settingFor name="Setting For">Physical Memory</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552622644 epochns</(endTime)>
  <settingFor name="Setting For">Method Profiling Sample</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552622644 epochns</(endTime)>
  <settingFor name="Setting For">Method Profiling Sample</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">10 ms</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552622644 epochns</(endTime)>
  <settingFor name="Setting For">Method Profiling Sample</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552640715 epochns</(endTime)>
  <settingFor name="Setting For">Method Sampling Information</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552640715 epochns</(endTime)>
  <settingFor name="Setting For">Method Sampling Information</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552640715 epochns</(endTime)>
  <settingFor name="Setting For">Method Sampling Information</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552640715 epochns</(endTime)>
  <settingFor name="Setting For">Method Sampling Information</settingFor>
  <name name="Setting Name">threshold</name>
  <value name="Setting Value">1000000 ns</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552659651 epochns</(endTime)>
  <settingFor name="Setting For">Thread Dump</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">true</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552659651 epochns</(endTime)>
  <settingFor name="Setting For">Thread Dump</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">60000 ms</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552659651 epochns</(endTime)>
  <settingFor name="Setting For">Thread Dump</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552678563 epochns</(endTime)>
  <settingFor name="Setting For">Compiler Statistics</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552678563 epochns</(endTime)>
  <settingFor name="Setting For">Compiler Statistics</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">1000 ms</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552678563 epochns</(endTime)>
  <settingFor name="Setting For">Compiler Statistics</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552714514 epochns</(endTime)>
  <settingFor name="Setting For">Compiler Configuration</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552714514 epochns</(endTime)>
  <settingFor name="Setting For">Compiler Configuration</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552714514 epochns</(endTime)>
  <settingFor name="Setting For">Compiler Configuration</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552736884 epochns</(endTime)>
  <settingFor name="Setting For">Code Cache Statistics</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552736884 epochns</(endTime)>
  <settingFor name="Setting For">Code Cache Statistics</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552736884 epochns</(endTime)>
  <settingFor name="Setting For">Code Cache Statistics</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552754380 epochns</(endTime)>
  <settingFor name="Setting For">Code Cache Configuration</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552754380 epochns</(endTime)>
  <settingFor name="Setting For">Code Cache Configuration</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552754380 epochns</(endTime)>
  <settingFor name="Setting For">Code Cache Configuration</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552771228 epochns</(endTime)>
  <settingFor name="Setting For">Code Sweeper Statistics</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552771228 epochns</(endTime)>
  <settingFor name="Setting For">Code Sweeper Statistics</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552771228 epochns</(endTime)>
  <settingFor name="Setting For">Code Sweeper Statistics</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552787390 epochns</(endTime)>
  <settingFor name="Setting For">Code Sweeper Configuration</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552787390 epochns</(endTime)>
  <settingFor name="Setting For">Code Sweeper Configuration</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552787390 epochns</(endTime)>
  <settingFor name="Setting For">Code Sweeper Configuration</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552804175 epochns</(endTime)>
  <settingFor name="Setting For">Long Flag</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552804175 epochns</(endTime)>
  <settingFor name="Setting For">Long Flag</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552804175 epochns</(endTime)>
  <settingFor name="Setting For">Long Flag</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552827370 epochns</(endTime)>
  <settingFor name="Setting For">Unsigned Long Flag</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552827370 epochns</(endTime)>
  <settingFor name="Setting For">Unsigned Long Flag</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552827370 epochns</(endTime)>
  <settingFor name="Setting For">Unsigned Long Flag</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552843247 epochns</(endTime)>
  <settingFor name="Setting For">Double Flag</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552843247 epochns</(endTime)>
  <settingFor name="Setting For">Double Flag</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552843247 epochns</(endTime)>
  <settingFor name="Setting For">Double Flag</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552858195 epochns</(endTime)>
  <settingFor name="Setting For">Boolean Flag</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552858195 epochns</(endTime)>
  <settingFor name="Setting For">Boolean Flag</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552858195 epochns</(endTime)>
  <settingFor name="Setting For">Boolean Flag</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552873059 epochns</(endTime)>
  <settingFor name="Setting For">String Flag</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552873059 epochns</(endTime)>
  <settingFor name="Setting For">String Flag</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552873059 epochns</(endTime)>
  <settingFor name="Setting For">String Flag</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552887723 epochns</(endTime)>
  <settingFor name="Setting For">Object Count</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552887723 epochns</(endTime)>
  <settingFor name="Setting For">Object Count</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552887723 epochns</(endTime)>
  <settingFor name="Setting For">Object Count</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552912280 epochns</(endTime)>
  <settingFor name="Setting For">GC Configuration</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552912280 epochns</(endTime)>
  <settingFor name="Setting For">GC Configuration</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552912280 epochns</(endTime)>
  <settingFor name="Setting For">GC Configuration</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552929692 epochns</(endTime)>
  <settingFor name="Setting For">GC Survivor Configuration</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552929692 epochns</(endTime)>
  <settingFor name="Setting For">GC Survivor Configuration</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552929692 epochns</(endTime)>
  <settingFor name="Setting For">GC Survivor Configuration</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552947790 epochns</(endTime)>
  <settingFor name="Setting For">GC TLAB Configuration</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552947790 epochns</(endTime)>
  <settingFor name="Setting For">GC TLAB Configuration</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552947790 epochns</(endTime)>
  <settingFor name="Setting For">GC TLAB Configuration</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552966065 epochns</(endTime)>
  <settingFor name="Setting For">GC Heap Configuration</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552966065 epochns</(endTime)>
  <settingFor name="Setting For">GC Heap Configuration</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552966065 epochns</(endTime)>
  <settingFor name="Setting For">GC Heap Configuration</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552984696 epochns</(endTime)>
  <settingFor name="Setting For">GC Young Generation Configuration</settingFor>
  <name name="Setting Name">enabled</name>
  <value name="Setting Value">false</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552984696 epochns</(endTime)>
  <settingFor name="Setting For">GC Young Generation Configuration</settingFor>
  <name name="Setting Name">period</name>
  <value name="Setting Value">everyChunk</value>
</event>
<event name="Recording Setting" path="jdk.ActiveSetting">
  <(endTime) name="End Time">1524059125552984696 epochns</(endTime)>
  <settingFor name="Setting For">GC Young Generation Configuration</settingFor>
  <name name="Setting Name">stacktrace</name>
  <value name="Setting Value">false</value>
</event>
<event name="Socket Read" path="jdk.SocketRead">
  <startTime name="Start Time">1524059125561061413 epochns</startTime>
  <(endTime) name="End Time">1524059126578840661 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.net.SocketInputStream#read([BIII)I" modifier="" line="49" type="INTERPRETED"/>
     <frame method="java.net.SocketInputStream#read([BII)I" modifier="public" line="141" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#fill()V" modifier="private" line="246" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#read()I" modifier="public synchronized" line="265" type="JIT_COMPILED"/>
     <frame method="java.io.FilterInputStream#read()I" modifier="public" line="83" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="550" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <bytesRead name="Bytes Read">1 B</bytesRead>
  <timeout name="Timeout Value">7200000 ms</timeout>
  <port name="Remote Port">57522</port>
  <address name="Remote Address">10.161.183.200</address>
  <host name="Remote Host"></host>
</event>
<event name="Socket Read" path="jdk.SocketRead">
  <startTime name="Start Time">1524059126597043805 epochns</startTime>
  <(endTime) name="End Time">1524059127597942255 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.net.SocketInputStream#read([BIII)I" modifier="" line="49" type="INTERPRETED"/>
     <frame method="java.net.SocketInputStream#read([BII)I" modifier="public" line="141" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#fill()V" modifier="private" line="246" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#read()I" modifier="public synchronized" line="265" type="JIT_COMPILED"/>
     <frame method="java.io.FilterInputStream#read()I" modifier="public" line="83" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="550" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <bytesRead name="Bytes Read">1 B</bytesRead>
  <timeout name="Timeout Value">7200000 ms</timeout>
  <port name="Remote Port">57522</port>
  <address name="Remote Address">10.161.183.200</address>
  <host name="Remote Host"></host>
</event>
<event name="Socket Read" path="jdk.SocketRead">
  <startTime name="Start Time">1524059127600684633 epochns</startTime>
  <(endTime) name="End Time">1524059128603232409 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.net.SocketInputStream#read([BIII)I" modifier="" line="49" type="INTERPRETED"/>
     <frame method="java.net.SocketInputStream#read([BII)I" modifier="public" line="141" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#fill()V" modifier="private" line="246" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#read()I" modifier="public synchronized" line="265" type="JIT_COMPILED"/>
     <frame method="java.io.FilterInputStream#read()I" modifier="public" line="83" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="550" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <bytesRead name="Bytes Read">1 B</bytesRead>
  <timeout name="Timeout Value">7200000 ms</timeout>
  <port name="Remote Port">57522</port>
  <address name="Remote Address">10.161.183.200</address>
  <host name="Remote Host"></host>
</event>
<event name="Socket Read" path="jdk.SocketRead">
  <startTime name="Start Time">1524059128606562766 epochns</startTime>
  <(endTime) name="End Time">1524059129608248290 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.net.SocketInputStream#read([BIII)I" modifier="" line="49" type="INTERPRETED"/>
     <frame method="java.net.SocketInputStream#read([BII)I" modifier="public" line="141" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#fill()V" modifier="private" line="246" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#read()I" modifier="public synchronized" line="265" type="JIT_COMPILED"/>
     <frame method="java.io.FilterInputStream#read()I" modifier="public" line="83" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="550" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <bytesRead name="Bytes Read">1 B</bytesRead>
  <timeout name="Timeout Value">7200000 ms</timeout>
  <port name="Remote Port">57522</port>
  <address name="Remote Address">10.161.183.200</address>
  <host name="Remote Host"></host>
</event>
<event name="Socket Read" path="jdk.SocketRead">
  <startTime name="Start Time">1524059129611281202 epochns</startTime>
  <(endTime) name="End Time">1524059130615870309 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.net.SocketInputStream#read([BIII)I" modifier="" line="49" type="INTERPRETED"/>
     <frame method="java.net.SocketInputStream#read([BII)I" modifier="public" line="141" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#fill()V" modifier="private" line="246" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#read()I" modifier="public synchronized" line="265" type="JIT_COMPILED"/>
     <frame method="java.io.FilterInputStream#read()I" modifier="public" line="83" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="550" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <bytesRead name="Bytes Read">1 B</bytesRead>
  <timeout name="Timeout Value">7200000 ms</timeout>
  <port name="Remote Port">57522</port>
  <address name="Remote Address">10.161.183.200</address>
  <host name="Remote Host"></host>
</event>
<event name="Socket Read" path="jdk.SocketRead">
  <startTime name="Start Time">1524059130623193445 epochns</startTime>
  <(endTime) name="End Time">1524059131624486882 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.net.SocketInputStream#read([BIII)I" modifier="" line="49" type="INTERPRETED"/>
     <frame method="java.net.SocketInputStream#read([BII)I" modifier="public" line="141" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#fill()V" modifier="private" line="246" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#read()I" modifier="public synchronized" line="265" type="JIT_COMPILED"/>
     <frame method="java.io.FilterInputStream#read()I" modifier="public" line="83" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="550" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <bytesRead name="Bytes Read">1 B</bytesRead>
  <timeout name="Timeout Value">7200000 ms</timeout>
  <port name="Remote Port">57522</port>
  <address name="Remote Address">10.161.183.200</address>
  <host name="Remote Host"></host>
</event>
<event name="Socket Read" path="jdk.SocketRead">
  <startTime name="Start Time">1524059131626568473 epochns</startTime>
  <(endTime) name="End Time">1524059132632327677 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.net.SocketInputStream#read([BIII)I" modifier="" line="49" type="INTERPRETED"/>
     <frame method="java.net.SocketInputStream#read([BII)I" modifier="public" line="141" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#fill()V" modifier="private" line="246" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#read()I" modifier="public synchronized" line="265" type="JIT_COMPILED"/>
     <frame method="java.io.FilterInputStream#read()I" modifier="public" line="83" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="550" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <bytesRead name="Bytes Read">1 B</bytesRead>
  <timeout name="Timeout Value">7200000 ms</timeout>
  <port name="Remote Port">57522</port>
  <address name="Remote Address">10.161.183.200</address>
  <host name="Remote Host"></host>
</event>
<event name="Socket Read" path="jdk.SocketRead">
  <startTime name="Start Time">1524059132634772672 epochns</startTime>
  <(endTime) name="End Time">1524059133638685635 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.net.SocketInputStream#read([BIII)I" modifier="" line="49" type="INTERPRETED"/>
     <frame method="java.net.SocketInputStream#read([BII)I" modifier="public" line="141" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#fill()V" modifier="private" line="246" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#read()I" modifier="public synchronized" line="265" type="JIT_COMPILED"/>
     <frame method="java.io.FilterInputStream#read()I" modifier="public" line="83" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="550" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <bytesRead name="Bytes Read">1 B</bytesRead>
  <timeout name="Timeout Value">7200000 ms</timeout>
  <port name="Remote Port">57522</port>
  <address name="Remote Address">10.161.183.200</address>
  <host name="Remote Host"></host>
</event>
<event name="Socket Read" path="jdk.SocketRead">
  <startTime name="Start Time">1524059133641371855 epochns</startTime>
  <(endTime) name="End Time">1524059134647463485 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.net.SocketInputStream#read([BIII)I" modifier="" line="49" type="INTERPRETED"/>
     <frame method="java.net.SocketInputStream#read([BII)I" modifier="public" line="141" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#fill()V" modifier="private" line="246" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#read()I" modifier="public synchronized" line="265" type="JIT_COMPILED"/>
     <frame method="java.io.FilterInputStream#read()I" modifier="public" line="83" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="550" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <bytesRead name="Bytes Read">1 B</bytesRead>
  <timeout name="Timeout Value">7200000 ms</timeout>
  <port name="Remote Port">57522</port>
  <address name="Remote Address">10.161.183.200</address>
  <host name="Remote Host"></host>
</event>
<event name="Socket Read" path="jdk.SocketRead">
  <startTime name="Start Time">1524059134650471087 epochns</startTime>
  <(endTime) name="End Time">1524059135653850767 epochns</(endTime)>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
  <stackTrace>
     <frame method="java.net.SocketInputStream#read([BIII)I" modifier="" line="49" type="INTERPRETED"/>
     <frame method="java.net.SocketInputStream#read([BII)I" modifier="public" line="141" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#fill()V" modifier="private" line="246" type="INTERPRETED"/>
     <frame method="java.io.BufferedInputStream#read()I" modifier="public synchronized" line="265" type="JIT_COMPILED"/>
     <frame method="java.io.FilterInputStream#read()I" modifier="public" line="83" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport#handleMessages(Lsun/rmi/transport/Connection;Z)V" modifier="" line="550" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run0()V" modifier="private" line="826" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#lambda$run$256()Ljava/lang/Void;" modifier="private" line="683" type="INTERPRETED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler$$Lambda$25.2122198491#run()Ljava/lang/Object;" modifier="public" line="-1" type="INTERPRETED"/>
     <frame method="java.security.AccessController#doPrivileged(Ljava/security/PrivilegedAction;Ljava/security/AccessControlContext;)Ljava/lang/Object;" modifier="public static native" line="-1" type="JIT_COMPILED"/>
     <frame method="sun.rmi.transport.tcp.TCPTransport$ConnectionHandler#run()V" modifier="public" line="682" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor#runWorker(Ljava/util/concurrent/ThreadPoolExecutor$Worker;)V" modifier="final" line="1142" type="INTERPRETED"/>
     <frame method="java.util.concurrent.ThreadPoolExecutor$Worker#run()V" modifier="public" line="617" type="INTERPRETED"/>
     <frame method="java.lang.Thread#run()V" modifier="public" line="745" type="INTERPRETED"/>
  </stackTrace>
  <bytesRead name="Bytes Read">1 B</bytesRead>
  <timeout name="Timeout Value">7200000 ms</timeout>
  <port name="Remote Port">57522</port>
  <address name="Remote Address">10.161.183.200</address>
  <host name="Remote Host"></host>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">0 B</allocated>
  <eventThread name="Thread">AWT-Shutdown</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">0 B</allocated>
  <eventThread name="Thread">C2 CompilerThread0</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">0 B</allocated>
  <eventThread name="Thread">C2 CompilerThread1</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">0 B</allocated>
  <eventThread name="Thread">JFR request timer</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">0 B</allocated>
  <eventThread name="Thread">Reference Handler</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">0 B</allocated>
  <eventThread name="Thread">VM JFR Buffer Thread</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">1296 B</allocated>
  <eventThread name="Thread">Finalizer</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">1312 B</allocated>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">13376 B</allocated>
  <eventThread name="Thread">JMX server connection timeout 30</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">160 B</allocated>
  <eventThread name="Thread">Java2D Disposer</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">172240 B</allocated>
  <eventThread name="Thread">AppKit Thread</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">20406496 B</allocated>
  <eventThread name="Thread">AWT-EventQueue-0</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">2122920 B</allocated>
  <eventThread name="Thread">Attach Listener</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">22536 B</allocated>
  <eventThread name="Thread">C1 CompilerThread2</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">2279488 B</allocated>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">24048 B</allocated>
  <eventThread name="Thread">RMI TCP Accept-0</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">32 B</allocated>
  <eventThread name="Thread">RMI Scheduler(0)</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">41872 B</allocated>
  <eventThread name="Thread">Service Thread</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">48 B</allocated>
  <eventThread name="Thread">Thread-0</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">48 B</allocated>
  <eventThread name="Thread">Thread-1</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">544 B</allocated>
  <eventThread name="Thread">TimerQueue</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">552 B</allocated>
  <eventThread name="Thread">DestroyJavaVM</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">61208 B</allocated>
  <eventThread name="Thread">RMI TCP Connection(6)-10.161.183.200</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059125515042298 epochns</(endTime)>
  <allocated name="Allocated">632 B</allocated>
  <eventThread name="Thread">Signal Dispatcher</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">0 B</allocated>
  <eventThread name="Thread">AWT-Shutdown</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">0 B</allocated>
  <eventThread name="Thread">C2 CompilerThread0</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">0 B</allocated>
  <eventThread name="Thread">C2 CompilerThread1</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">0 B</allocated>
  <eventThread name="Thread">Reference Handler</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">1296 B</allocated>
  <eventThread name="Thread">Finalizer</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">1312 B</allocated>
  <eventThread name="Thread">Java2D Queue Flusher</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">13376 B</allocated>
  <eventThread name="Thread">JMX server connection timeout 30</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">1472 B</allocated>
  <eventThread name="Thread">JFR request timer</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">160 B</allocated>
  <eventThread name="Thread">Java2D Disposer</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">172240 B</allocated>
  <eventThread name="Thread">AppKit Thread</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">20406496 B</allocated>
  <eventThread name="Thread">AWT-EventQueue-0</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">2122920 B</allocated>
  <eventThread name="Thread">Attach Listener</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">22896 B</allocated>
  <eventThread name="Thread">C1 CompilerThread2</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">24048 B</allocated>
  <eventThread name="Thread">RMI TCP Accept-0</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">2781968 B</allocated>
  <eventThread name="Thread">RMI TCP Connection(5)-10.161.183.200</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">32 B</allocated>
  <eventThread name="Thread">RMI Scheduler(0)</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">41872 B</allocated>
  <eventThread name="Thread">Service Thread</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">48 B</allocated>
  <eventThread name="Thread">Thread-0</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">48 B</allocated>
  <eventThread name="Thread">Thread-1</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">544 B</allocated>
  <eventThread name="Thread">TimerQueue</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">552 B</allocated>
  <eventThread name="Thread">DestroyJavaVM</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">61208 B</allocated>
  <eventThread name="Thread">RMI TCP Connection(6)-10.161.183.200</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">632 B</allocated>
  <eventThread name="Thread">Signal Dispatcher</eventThread>
</event>
<event name="Thread Allocation Statistics" path="jdk.ThreadAllocationStatistics">
  <(endTime) name="End Time">1524059136042177699 epochns</(endTime)>
  <allocated name="Allocated">8352 B</allocated>
  <eventThread name="Thread">VM JFR Buffer Thread</eventThread>
</event>
<event name="Thread Context Switch Rate" path="jdk.ThreadContextSwitchRate">
  <(endTime) name="End Time">1524059136038010525 epochns</(endTime)>
  <switchRate name="Switch Rate">406.02215576171875</switchRate>
</event>
